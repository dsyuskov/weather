{"version":3,"sources":["serviceWorker.js","service.js","ui/search/cmp-search.js","ui/weatherDay/cmp-weatherDay.js","ui/map/map.js","ui/controlPanel/cmp-controlPanel.js","ui/weatherForecastDay/cmp-weatherForecastDay.js","ui/page/cmp-page.js","actions/forecast.js","actions/weather.js","ui/page/cnt-page.js","actions/controlPanel.js","reducers/weather.js","reducers/forecast.js","reducers/controlPanel.js","reducers/index.js","index.js","store/configureStore.js"],"names":["Boolean","window","location","hostname","match","word","en","fullDayName","0","1","2","3","4","5","6","shortDayName","fullMonthName","7","8","9","10","11","weather","200","201","202","210","211","212","221","230","231","232","300","301","302","310","311","312","313","314","321","500","501","502","503","504","511","520","521","522","531","600","601","602","611","612","613","615","616","620","621","622","701","711","721","731","741","751","761","762","771","781","800","801","802","803","804","words","feels","wind","humidity","search","ru","translite","lang","key","value","celsiusToFaringate","temp","Math","round","Search","props","className","type","placeholder","onChange","onClick","event","preventDefault","WeatherDay","state","currentDateTime","addSero","date","Date","dayName","this","getDay","day","getDate","month","getMonth","hour","getHours","min","getMinutes","setState","timerID","setInterval","getCurrentDateTime","clearInterval","isCelsius","city","name","country","src","icon","alt","id","speed","React","Component","mapboxgl","accessToken","Map","zoom","map","container","mapContainer","center","lon","lat","style","setCenter","remove","position","width","height","ref","el","ControlPanel","classNameCelsius","classNameFaringate","onClickUpdate","onClickFaringate","onClickCelsius","WeatherForecastDay","forecast","weekDay","Page","searchString","onSearchChange","target","onControlPanelChange","changeLang","bind","changeUseCelsius","getWeather","navigator","geolocation","getCurrentPosition","pos","getWeatherCoord","coords","latitude","longitude","coord","getWeatherForecastRequest","bool","payload","getWeatherForecastFailture","getWeatherForecast","units","dispatch","fetch","then","response","ok","Error","statusText","json","items","TODAY","setUTCHours","NEXT_DAY","push","HOURS_TO_DAY","getTime","DAY","forecastForThreeDays","list","filter","item","includes","dt","result","forEach","i","main","prepareForecast","catch","getWeatherRequest","getWeatherSuccess","getWeatherFailture","preapreWeather","sys","pow","deg","connect","isRequest","isError","isRequestForecast","isErrorForecast","controlPanel","initState","combineReducers","action","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea8f8fb4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const word = {\n  en: {\n    fullDayName: {\n      0: 'Sunday', 1: 'Monday', 2: 'Tuesday', 3: 'Wednesday', 4: 'Thursday', 5: 'Friday', 6: 'Saturday'\n    },\n    shortDayName: {\n      0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'\n    },\n    fullMonthName: {\n      0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June',\n      6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'\n    },\n    weather: {\n      200: 'Thunderstorm with light rain', 201: 'Thunderstorm with rain', 202: 'Thunderstorm with heavy rain',\n      210: 'Light thunderstorm' , 211: 'Thunderstorm', 212: 'Heavy thunderstorm', 221: 'Ragged thunderstorm',\n      230: 'Thunderstorm with light drizzle', 231: 'Thunderstorm with drizzle', 232: 'Thunderstorm with heavy drizzle',\n      300: 'Light intensity drizzle', 301: 'Drizzle', 302: 'Heavy intensity drizzle', 310: 'Light intensity drizzle rain',\n      311: 'Drizzle rain', 312: 'Heavy intensity drizzle rain', 313: 'Shower rain and drizzle',\n      314: 'Heavy shower rain and drizzle', 321: 'Shower drizzle', 500: 'Light rain', 501: 'Moderate rain',\n      502: 'Heavy intensity rain', 503: 'Very heavy rain', 504: 'Extreme rain', 511: 'Freezing rain',\n      520: 'Light intensity shower rain', 521: 'Shower rain', 522: 'Heavy intensity shower rain', 531: 'Ragged shower rain',\n      600: 'Light snow', 601: 'Snow', 602: 'Heavy snow', 611: 'Sleet', 612: 'Light shower sleet', 613: 'Shower sleet',\n      615: 'Light rain and snow', 616: 'Rain and snow', 620: 'Light shower snow', 621: 'Shower snow', 622: 'Heavy shower snow',\n      701: 'Mist', 711: 'Smoke', 721: 'Haze', 731: 'Sand / dust whirls', 741: 'Fog', 751: 'Sand', 761: 'Dust',\n      762: 'Volcanic ash', 771: 'Squalls', 781: 'Tornado', 800: 'Clear sky', 801: 'Few clouds',\n      802: 'Scattered clouds', 803: 'Broken clouds', 804: 'Overcast clouds',\n    },\n    words: {\n      feels: 'Feels', wind: 'Wind', humidity: 'Humidity', search: 'Search',\n    }\n  },\n  ru: {\n    fullDayName: {\n      0: 'Воскресенье', 1: 'Понедельник', 2: 'Вторник', 3: 'Среда', 4: 'Четверг', 5: 'Пятница', 6: 'Суббота'\n    },\n    shortDayName: {\n      0: 'Вс', 1: 'Пн', 2: 'Вт', 3: 'Ср', 4: 'Чт', 5: 'Пт', 6: 'Сб'\n    },\n    fullMonthName: {\n      0: 'Января', 1: 'Февраля', 2: 'Марта', 3: 'Апреля', 4: 'Мая', 5: 'Июня',\n      6: 'Июля', 7: 'Августа', 8: 'Сентяря', 9: 'Октября', 10: 'Ноября', 11: 'Декабря'\n    },\n    weather:{\n      200: 'Гроза с небольшим дождем', 201: 'Гроза с дождем', 202: 'Гроза с сильным дождем',\n      210: 'Легкая гроза', 211: 'Гроза', 212: 'Сильная гроза', 221: 'Рваная гроза',\n      230: 'Гроза с моросящим дождем', 231: 'Гроза с моросящим дождем', 232: 'Гроза с сильным моросящим дождем',\n      300: 'Моросящий дождь', 301: 'Морось', 302: 'Моросящий дождь', 310: 'Моросящий дождь',\n      311: 'Моросящий дождь', 312: 'Моросящий дождь сильной интенсивности', 313: 'Дождь и дождь под дождем',\n      314: 'Сильный дождь и дождь', 321: 'Дождь', 500: 'Слабый дождь', 501: 'Умеренный дождь',\n      502: 'Сильный дождь', 503: 'Сильный дождь', 504: 'Сильный дождь', 511: 'Ледяной дождь',\n      520: 'Сильный дождь под дождем', 521: 'Сильный дождь', 522: 'Сильный дождь под дождем', 531: 'Сильный дождь под дождем',\n      600: 'Слабый снег', 601: 'Снег', 602: 'Сильный снегопад', 611: 'Мокрый снег', 612: 'Слабый дождь со снегом', 613: 'Мокрый душ',\n      615: 'Небольшой дождь и снег', 616: 'Дождь и снег', 620: 'Легкий снегопад', 621: 'Снег под дождем', 622: 'Снег под сильным дождем',\n      701: 'Туман', 711: 'Дым', 721: 'Дымка', 731: 'Песчано-пылевые вихри', 741: 'Туман', 751: 'Песок', 761: 'Пыль',\n      762: 'Вулканический пепел', 771: 'Шквал', 781: 'Торнадо', 800: 'Чистое небо', 801: 'Немного облаков',\n      802: 'Рассеянные облака', 803: 'Рассеянные облака', 804: 'Пасмурные облака',\n    },\n    words: {\n      feels: 'Ощущается', wind: 'Ветер', humidity: 'Влажность', search: 'Поиск',\n    }\n  },\n}\n\nexport function translite(lang, key, value) {\n  return word[lang][key][value];\n}\n\nexport function celsiusToFaringate(temp) {\n  return Math.round(temp * (9 / 5) + 32);\n}","import React from 'react';\nimport { translite } from '../../service';\n\nexport default function Search(props){\n  return (\n    <div className=\"search\">\n      <form className=\"search__form\">\n        <input \n          className=\"search__input\" \n          type=\"text\"\n          placeholder=\"Enter city name\"\n          onChange={ props.onChange }\n          value={ props.value }\n        />\n        <button \n          className=\"button search__button\"\n          onClick={(event) => {\n            props.onClick();\n            event.preventDefault();\n          }}\n        >{ translite(props.lang, 'words', 'search') }</button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\nimport { translite, celsiusToFaringate } from '../../service';\n\nexport default class WeatherDay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  state = {\n    currentDateTime: '',\n  }\n\n  getCurrentDateTime() {\n    const addSero = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09'];\n    const date = new Date();\n    const dayName = translite(this.props.lang, 'shortDayName',date.getDay());\n    const day = date.getDate()\n    const month = translite(this.props.lang,'fullMonthName',date.getMonth());\n    const hour = date.getHours() < 10 ? addSero[date.getHours()] : date.getHours();\n    const min = date.getMinutes() < 10 ? addSero[date.getMinutes()] : date.getMinutes();\n    this.setState( {currentDateTime:`${dayName} ${day} ${month}  ${hour}:${min}` });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getCurrentDateTime(), 10);\n  }\n\n  componentWillMount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const { weather, isCelsius } = this.props;\n    const temp = isCelsius ? weather.weather.temp : celsiusToFaringate(weather.weather.temp);\n    const feels = isCelsius ? weather.weather.feels : celsiusToFaringate(weather.weather.feels);\n    return (\n      <div className=\"weather-day\">\n        <div className=\"weather-day__city\">{ weather.city.name }, { weather.city.country }</div>\n        <div className=\"weather-day__date-time\">{ this.state.currentDateTime }</div>\n        <div className=\"weather-day__wrapper\">\n          <div className=\"weather-day__temp\">\n            <div className=\"weather-day__temp-value\">{ temp }</div>\n            <div className=\"weather-day__temp-deg\">&deg;</div>\n          </div>\n          <div className=\"weather-day__img\">\n            <img src={`./images/${weather.weather.icon}.png`} alt=''/>\n          </div>\n          <ul className=\"weather-day__more\">\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'weather', weather.weather.id) }</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'feels') }: { feels } &deg;</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'wind') }: { weather.weather.wind.speed } m/c</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'humidity') }: { weather.weather.humidity } %</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoieXVza292c3MiLCJhIjoiY2szNnRoODJuMDR2NTNubWhmZ2tyNHcweiJ9.nqpNmNuvXFtwx0VFoqqxGQ';\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoom: 20,\n    };\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      center: [this.props.lon, this.props.lat],\n      style: 'mapbox://styles/mapbox/streets-v9',\n      zoom: 10\n    });\n  }\n\n  componentDidUpdate() {\n    this.map.setCenter([this.props.lon, this.props.lat]);\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n    };\n\n    return <div style={style} ref={el => this.mapContainer = el} className='map'/>;\n  }\n}\n","import React from 'react';\n\nexport function ControlPanel(props) {\n \n  let classNameCelsius;\n  let classNameFaringate;\n\n  if (props.isCelsius) {\n    classNameCelsius = \"button button--selected control-panel__celsius\";\n    classNameFaringate = \"button control-panel__faringate\"\n  } else {\n    classNameCelsius = \"button control-panel__celsius\"\n    classNameFaringate = \"button button--selected control-panel__faringate\"\n  }\n\n  return(\n    <div className=\"control-panel\">\n    <button \n      className=\"button control-panel__update\"\n      onClick={ props.onClickUpdate }\n    ></button>\n    <select \n      value={ props.value }\n      onChange={ props.onChange }\n      className=\"dropdown control-panel__lang\">\n      <option className=\"dropdown__item\" value=\"en\">en</option>\n      <option className=\"dropdown__item\" value=\"ru\">ru</option>\n    </select>\n    <button \n      className={ classNameFaringate }\n      onClick={ props.onClickFaringate }\n    >&deg; F</button>\n    <button \n      className={ classNameCelsius }\n      onClick={ props.onClickCelsius }\n    >&deg; C</button>\n  </div>\n  )\n}\n\n","import React from 'react';\nimport { translite, celsiusToFaringate } from '../../service';\n\nexport function WeatherForecastDay(props) {\n  const { lang, forecast, isCelsius } = props;\n  const temp = isCelsius ? forecast.temp : celsiusToFaringate(forecast.temp);\n  return(\n     <div className=\"weather-forecast__day\">\n      <div className=\"weather-forecast__weekday\">{ translite(lang,'fullDayName', forecast.weekDay) }</div>\n      <div className=\"weather-forecast__temp\">{ temp }&deg;</div>\n      <div className=\"weather-forecast__img\">\n        <img src={`./images/${ forecast.icon }.png`} alt=''/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport Search from '../search/cmp-search';\nimport WeatherDay from '../weatherDay/cmp-weatherDay';\nimport { Map} from '../map/map'\nimport { ControlPanel } from '../controlPanel/cmp-controlPanel';\nimport { WeatherForecastDay } from '../weatherForecastDay/cmp-weatherForecastDay';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onClickCelsius = this.onClickCelsius.bind(this);\n    this.onClickFaringate = this.onClickFaringate.bind(this);\n    this.onControlPanelChange = this.onControlPanelChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  state = {\n    searchString: '',\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchString: event.target.value});\n  }\n\n  onControlPanelChange = event => {\n    this.props.changeLang(event.target.value);\n  }\n\n  onClickCelsius() {\n    this.props.changeUseCelsius(true);\n  }\n\n  onClickFaringate() {\n    this.props.changeUseCelsius(false);\n  }\n\n  onClick() {\n    this.props.getWeather(this.state.searchString, 'metric');\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(pos => {\n      this.props.getWeatherCoord(pos.coords.latitude, pos.coords.longitude);\n    })\n  }\n\n  render() {\n    const { searchString } = this.state;\n    const { weather,  forecast, lang, isCelsius } = this.props;\n\n    if (!weather.city) {\n      return (\n        <div className=\"wrapper\">\n          <header className=\"header\">\n            <ControlPanel \n              isCelsius={ isCelsius }\n              onClickUpdate = { this.onClick }\n              onClickFaringate = {this.onClickFaringate }\n              onClickCelsius = { this.onClickCelsius }\n              onChange= { this.onControlPanelChange }\n            />\n            <Search \n              lang={ lang }\n              value={ searchString }\n              onChange= { this.onSearchChange }\n              onClick={ this.onClick }\n            />\n          </header>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <header className=\"header\">\n          <ControlPanel \n            isCelsius={ isCelsius }\n            onClickUpdate= { this.onClick }\n            onClickFaringate = {this.onClickFaringate }\n            onClickCelsius = { this.onClickCelsius }\n            onChange= { this.onControlPanelChange }\n          />\n          <Search\n            lang={ lang }\n            value={ searchString }\n            onChange= { this.onSearchChange }\n            onClick={ this.onClick }\n          />\n        </header>\n        <main className=\"main\">\n          <div className=\"weather\">\n            <WeatherDay\n              lang={ lang }\n              isCelsius={ isCelsius }\n              weather={ weather }\n            />\n            <div className=\"weather-forecast\">\n              {forecast && <WeatherForecastDay\n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[0] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[1] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[2] }\n              />}\n            </div>\n          </div>\n          <div className='mapContainer'>\n          <Map \n            lat = { weather.city.coord.lat }\n            lon = { weather.city.coord.lon }\n          />\n          </div>\n        </main>\n    </div>\n    )\n  }\n}\n\nexport default Page;\n","export const GET_WEATHER_FORECAST_REQUEST  = 'GET_WEATHER_FORECAST_REQUEST';\nexport const GET_WEATHER_FORECAST_SUCCESS  = 'GET_WEATHER_FORECAST_SUCCESS';\nexport const GET_WEATHER_FORECAST_FAILTURE = 'GET_WEATHER_FORECAST_FAILTURE';\n\nconst PATH_BASE = 'http://api.openweathermap.org/data/2.5/';\nconst FORECAST = 'forecast';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst ID = 'id=';\n\nexport const getWeatherForecastRequest = bool => {\n  return {\n    type: GET_WEATHER_FORECAST_REQUEST,\n    payload: bool\n  }\n}\n\nexport const getWeatherForecastSuccess = item => {\n  return {\n    type: GET_WEATHER_FORECAST_SUCCESS,\n    payload: item\n  }\n}\n\nexport const getWeatherForecastFailture = bool => {\n  return {\n    type: GET_WEATHER_FORECAST_FAILTURE,\n    payload: bool\n  }\n}\n\nexport const getWeatherForecast = (city, units) => {\n  return (dispatch) => {\n    dispatch(getWeatherForecastRequest(true));\n    fetch(`${PATH_BASE}${FORECAST}?${API_KEY}&${UNITS}&${ID}${city}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherForecastRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(items => {\n        dispatch(getWeatherForecastFailture(false));\n        dispatch(getWeatherForecastSuccess(prepareForecast(items)));\n      })\n      .catch(() => dispatch(getWeatherForecastFailture(true)))\n    }\n}\n\nfunction prepareForecast(items) {\n  const HOURS_TO_DAY = 24;\n  const MINUTS_TO_HOURS = 3600;\n  const MILLISECONDS_TO_MINUTS = 1000;\n  const DAY = HOURS_TO_DAY * MINUTS_TO_HOURS * MILLISECONDS_TO_MINUTS;\n\n  const TODAY = new Date().setUTCHours(12, 0, 0, 0);\n\n  const NEXT_DAY = [];\n  NEXT_DAY.push(new Date(TODAY + DAY).getTime());\n  NEXT_DAY.push(new Date(TODAY + DAY * 2).getTime());\n  NEXT_DAY.push(new Date(TODAY + DAY * 3).getTime());\n\n  const forecastForThreeDays = items.list.filter((item) =>  NEXT_DAY.includes( item.dt * MILLISECONDS_TO_MINUTS ));\n\n  const result = {};\n\n  forecastForThreeDays.forEach( (item, i) => {\n    result[i] = {\n      weekDay: new Date(NEXT_DAY[i]).getDay(),\n      temp: Math.round(item.main.temp),\n      icon: item.weather[0].icon,\n    };\n  });\n\n  return  result;\n};\n","import { getWeatherForecast } from '../actions/forecast'\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILTURE = 'GET_WEATHER_FAILTURE';\n\nconst PATH_BASE = 'http://api.openweathermap.org/data/2.5/';\nconst WEATHER = 'weather';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst PATH_SEARCH = 'q=';\n\nexport const getWeatherRequest = bool => {\n  return {\n    type: GET_WEATHER_REQUEST,\n    payload: bool\n  }\n}\n\nexport const getWeatherSuccess = item => {\n  return {\n    type: GET_WEATHER_SUCCESS,\n    payload: item\n  }\n}\n\nexport const getWeatherFailture = bool => {\n  return {\n    type: GET_WEATHER_FAILTURE,\n    payload: bool\n  }\n}\n\nexport const getWeather = (city) => {\n  return (dispatch) => {\n    dispatch(getWeatherRequest(true));\n\n    fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&${PATH_SEARCH}${city}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => {\n        dispatch(getWeatherForecast(item.id));\n        dispatch(getWeatherFailture(false));\n        dispatch(getWeatherSuccess(preapreWeather(item)));\n      })\n      .catch(() => dispatch(getWeatherFailture(true)))\n    }\n}\n\nexport const getWeatherCoord = (lat, lon) => {\n  return (dispatch) => {\n    dispatch(getWeatherRequest(true));\n    \n    fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&lat=${lat}&lon=${lon}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => {\n        dispatch(getWeatherForecast(item.id));\n        dispatch(getWeatherFailture(false));\n        dispatch(getWeatherSuccess(preapreWeather(item)));\n      })\n      .catch(() => dispatch(getWeatherFailture(true)))\n    }\n}\n\nfunction preapreWeather(item) {\n  const result = {\n    id: item.id,\n    date: item.dt,\n    city: {\n      name: item.name,\n      country: item.sys.country,\n      coord:{\n        lat: item.coord.lat,\n        lon: item.coord.lon,\n      },\n    },\n    weather: {\n      id: item.weather[0].id,\n      temp: Math.round(item.main.temp),\n      feels: Math.round(13.12 + 0.6215*Math.round(item.main.temp) - 11.37*Math.pow(item.wind.speed, 0.16) + 0.3965*Math.round(item.main.temp)*Math.pow(item.wind.speed, 0.16)),\n      humidity: item.main.humidity,\n      icon: item.weather[0].icon,\n      wind: {\n        deg: item.wind.deg,\n        speed: item.wind.speed,\n      },\n    },\n  }\n  return result;\n}\n","import { connect } from 'react-redux';\nimport Page from './cmp-page';\nimport { getWeather, getWeatherCoord } from '../../actions/weather';\nimport { getWeatherForecast } from '../../actions/forecast';\nimport { changeLang, changeUseCelsius } from '../../actions/controlPanel';\n\nfunction mapStateToProps (state) {\n  const { weather, isRequest, isError } = state.weather;\n  const { forecast, isRequestForecast, isErrorForecast } = state.forecast;\n  const { lang, isCelsius } = state.controlPanel;\n  return { \n    isRequest,\n    weather,\n    isError,\n    forecast,\n    isRequestForecast,\n    isErrorForecast,\n    lang,\n    isCelsius,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getWeather: (city) => dispatch(getWeather(city)),\n    getWeatherCoord: (lat, lon) => dispatch(getWeatherCoord(lat, lon)),\n    getWeatherForecast: (city) => dispatch(getWeatherForecast(city)),\n    changeLang: (lang) => dispatch(changeLang(lang)),\n    changeUseCelsius: (isCelsius) => dispatch(changeUseCelsius(isCelsius)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n","export const CHANGE_LANG  = 'CHANGE_LANG';\nexport const CHANGE_USE_CELSIUS  = 'USE_CELSIUS';\n\nexport const changeLang = lang => {\n  return {\n    type: CHANGE_LANG,\n    payload: lang,\n  }\n}\n\nexport const changeUseCelsius = isCelsius => {\n  return {\n    type: CHANGE_USE_CELSIUS,\n    payload: isCelsius,\n  }\n}\n","import {\n  GET_WEATHER_REQUEST,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILTURE,\n  } from '../actions/weather';\n\nconst initState = {\n  weather: '',\n  isRequest: false,\n  isError: false\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_REQUEST: {\n      return {\n        ...state,\n        isRequest: action.payload\n      }\n    }\n    case GET_WEATHER_FAILTURE: {\n      return {\n        ...state,\n        isError: action.payload\n      }\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...state,\n        weather: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  GET_WEATHER_FORECAST_REQUEST,\n  GET_WEATHER_FORECAST_SUCCESS,\n  GET_WEATHER_FORECAST_FAILTURE,\n  } from '../actions/forecast';\n\nconst initState = {\n  forecast: '',\n  isRequestForecast: false,\n  isErrorForecast: false\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_FORECAST_REQUEST: {\n      return {\n        ...state,\n        isRequestForecast: action.payload\n      }\n    }\n    case GET_WEATHER_FORECAST_FAILTURE: {\n      return {\n        ...state,\n        isErrorForecast: action.payload\n      }\n    }\n    case GET_WEATHER_FORECAST_SUCCESS: {\n      return {\n        ...state,\n        forecast: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  CHANGE_LANG,\n  CHANGE_USE_CELSIUS,\n  } from '../actions/controlPanel';\n\nconst initState = {\n  lang: 'en',\n  isCelsius: 'true',\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case CHANGE_LANG: {\n      return {\n        ...state,\n        lang: action.payload\n      }\n    }\n    case CHANGE_USE_CELSIUS: {\n      return {\n        ...state,\n        isCelsius: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport weather from './weather';\nimport forecast from './forecast';\nimport controlPanel from './controlPanel';\n\nexport default combineReducers({\n  weather,\n  forecast,\n  controlPanel,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport Page from './ui/page/cnt-page';\nimport configureStore from './store/configureStore';\nimport './styles/main.scss';\n\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store = {store}>\n    <Page />\n  </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//https://github.com/stowball/dummys-guide-to-redux-and-thunk-react\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}