{"version":3,"sources":["serviceWorker.js","service.js","ui/search/cmp-search.js","ui/weatherDay/cmp-weatherDay.js","ui/map/map.js","ui/controlPanel/cmp-controlPanel.js","ui/weatherForecastDay/cmp-weatherForecastDay.js","ui/page/cmp-page.js","actions/forecast.js","actions/backgroundImage.js","countrys.js","actions/weather.js","ui/page/cnt-page.js","actions/controlPanel.js","reducers/weather.js","reducers/forecast.js","reducers/controlPanel.js","reducers/backgroundImage.js","reducers/index.js","index.js","store/configureStore.js"],"names":["Boolean","window","location","hostname","match","word","en","fullDayName","0","1","2","3","4","5","6","shortDayName","fullMonthName","7","8","9","10","11","weather","200","201","202","210","211","212","221","230","231","232","300","301","302","310","311","312","313","314","321","500","501","502","503","504","511","520","521","522","531","600","601","602","611","612","613","615","616","620","621","622","701","711","721","731","741","751","761","762","771","781","800","801","802","803","804","words","feels","wind","humidity","search","lat","lon","ru","translite","lang","key","value","celsiusToFaringate","temp","Math","round","addSero","n","Search","props","className","type","placeholder","onChange","onClick","event","preventDefault","WeatherDay","state","currentDateTime","date","Date","setUTCSeconds","getUTCSeconds","this","timezone","dayName","getUTCDay","day","getUTCDate","month","getUTCMonth","hour","getUTCHours","min","getUTCMinutes","setState","timerID","setInterval","getCurrentDateTime","clearInterval","isCelsius","city","name","country","src","icon","alt","id","speed","React","Component","mapboxgl","accessToken","Map","zoom","map","container","mapContainer","center","style","setCenter","remove","split","position","width","height","ref","el","ControlPanel","classNameCelsius","classNameFaringate","onClickUpdate","onChangeLang","onClickFaringate","onClickCelsius","WeatherForecastDay","forecast","weekDay","Page","onSearchChange","changeSearchString","target","changeLang","localStorage","setItem","bind","onUpdateClick","changeUseCelsius","timesOfDay","season","weatherForBackground","searchString","getBackgroundImage","getWeatherByCity","document","body","background","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundAttachment","loadSetting","navigator","geolocation","getCurrentPosition","pos","getWeatherByCoord","coords","latitude","longitude","isRequestWeather","isRequestForecast","isRequestBackgroundImage","coord","getWeatherForecastRequest","bool","payload","getWeatherForecastFailture","getWeatherForecast","units","dispatch","fetch","then","response","ok","Error","statusText","json","items","result","i","setDate","getDate","dayToStr","getFullYear","getMonth","getDay","list","filter","item","dt_txt","includes","reduce","sum","main","prepareForecast","catch","getImageRequest","getImageFailture","getWeatherForBackground","countrys","getWeatherRequest","getWeatherSuccess","getWeatherFailture","preapreWeather","dt","sys","pow","deg","getCoordsByIP","a","status","stringCoord","loc","commaIndex","indexOf","slice","connect","isError","isErrorForecast","controlPanel","rndPhoto","random","photos","photo","length","getImageSuccess","farm","server","secret","prepareUrl","initState","getItem","hours","getHours","getTimesOfDay","getCurrentSeason","isErrorBackgroundImage","combineReducers","action","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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N,GAAM,UACN,GAAM,eACN,GAAM,WACN,GAAM,yBACN,GAAM,WACN,GAAM,oBACN,GAAM,mBACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,gBACN,GAAM,WACN,GAAM,QACN,GAAM,oCACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,UACN,GAAM,eACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,gBACN,GAAM,OACN,GAAM,YACN,GAAM,+CACN,GAAM,SACN,GAAM,oBACN,GAAM,aACN,GAAM,QACN,GAAM,SACN,GAAM,WACN,GAAM,gBACN,GAAM,UACN,GAAM,UACN,GAAM,iBACN,GAAM,QACN,GAAM,cACN,GAAM,SACN,GAAM,SACN,GAAM,YACN,GAAM,YACN,GAAM,QACN,GAAM,OACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,QACN,GAAM,UACN,GAAM,YACN,GAAM,WACN,GAAM,oCACN,GAAM,YACN,GAAM,cACN,GAAM,wBACN,GAAM,QACN,GAAM,WACN,GAAM,yBACN,GAAM,WACN,GAAM,OACN,GAAM,SACN,GAAM,WACN,GAAM,cACN,GAAM,WACN,GAAM,SACN,GAAM,4BACN,GAAM,SACN,GAAM,iBACN,GAAM,UACN,GAAM,QACN,GAAM,eACN,GAAM,UACN,GAAM,QACN,GAAM,UACN,GAAM,kBACN,GAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,eACN,GAAM,QACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,aACN,GAAM,eACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,UACN,GAAM,OACN,GAAM,QACN,GAAM,WACN,GAAM,mBACN,GAAM,YACN,GAAM,YACN,GAAM,QACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,2BACN,GAAM,aACN,GAAM,aACN,GAAM,cACN,GAAM,SACN,GAAM,WACN,GAAM,WACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,iCACN,GAAM,eACN,GAAM,UACN,GAAM,OACN,GAAM,mBACN,GAAM,aACN,GAAM,gBACN,GAAM,YACN,GAAM,cACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,gBACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,cACN,GAAM,QACN,GAAM,QACN,GAAM,OACN,GAAM,eACN,GAAM,SACN,GAAM,cACN,GAAM,cACN,GAAM,WACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,gBACN,GAAM,SACN,GAAM,wBACN,GAAM,2BACN,GAAM,mCACN,GAAM,iBACN,GAAM,SACN,GAAM,mBACN,GAAM,aACN,GAAM,UACN,GAAM,aACN,GAAM,OACN,GAAM,YACN,GAAM,QACN,GAAM,eACN,GAAM,aACN,GAAM,QACN,GAAM,cACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,wBACN,GAAM,UACN,GAAM,WACN,GAAM,cACN,GAAM,SACN,GAAM,UACN,GAAM,aACN,GAAM,eACN,GAAM,aACN,GAAM,aACN,GAAM,iBACN,GAAM,YACN,GAAM,SACN,GAAM,QACN,GAAM,qBACN,GAAM,WACN,GAAM,WACN,GAAM,UACN,GAAM,yBACN,GAAM,UACN,GAAM,QACN,GAAM,UACN,GAAM,gBACN,GAAM,UACN,GAAM,UACN,GAAM,uCACN,GAAM,UACN,GAAM,cACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,sBACN,GAAM,SACN,GAAM,YACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,YACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,8BACN,GAAM,OACN,GAAM,OACN,GAAM,2BACN,GAAM,QACN,GAAM,UACN,GAAM,mCACN,GAAM,uBACN,GAAM,UACN,GAAM,sBACN,GAAM,cACN,GAAM,WACN,GAAM,sBACN,GAAM,UACN,GAAM,OACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,iBACN,GAAM,YACN,GAAM,YACN,GAAM,UACN,GAAM,QACN,GAAM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","file":"static/js/main.50c9002d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const word = {\n  en: {\n    fullDayName: {\n      0: 'Sunday', 1: 'Monday', 2: 'Tuesday', 3: 'Wednesday', 4: 'Thursday', 5: 'Friday', 6: 'Saturday'\n    },\n    shortDayName: {\n      0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat'\n    },\n    fullMonthName: {\n      0: 'January', 1: 'February', 2: 'March', 3: 'April', 4: 'May', 5: 'June',\n      6: 'July', 7: 'August', 8: 'September', 9: 'October', 10: 'November', 11: 'December'\n    },\n    weather: {\n      200: 'Thunderstorm with light rain', 201: 'Thunderstorm with rain', 202: 'Thunderstorm with heavy rain',\n      210: 'Light thunderstorm' , 211: 'Thunderstorm', 212: 'Heavy thunderstorm', 221: 'Ragged thunderstorm',\n      230: 'Thunderstorm with light drizzle', 231: 'Thunderstorm with drizzle', 232: 'Thunderstorm with heavy drizzle',\n      300: 'Light intensity drizzle', 301: 'Drizzle', 302: 'Heavy intensity drizzle', 310: 'Light intensity drizzle rain',\n      311: 'Drizzle rain', 312: 'Heavy intensity drizzle rain', 313: 'Shower rain and drizzle',\n      314: 'Heavy shower rain and drizzle', 321: 'Shower drizzle', 500: 'Light rain', 501: 'Moderate rain',\n      502: 'Heavy intensity rain', 503: 'Very heavy rain', 504: 'Extreme rain', 511: 'Freezing rain',\n      520: 'Light intensity shower rain', 521: 'Shower rain', 522: 'Heavy intensity shower rain', 531: 'Ragged shower rain',\n      600: 'Light snow', 601: 'Snow', 602: 'Heavy snow', 611: 'Sleet', 612: 'Light shower sleet', 613: 'Shower sleet',\n      615: 'Light rain and snow', 616: 'Rain and snow', 620: 'Light shower snow', 621: 'Shower snow', 622: 'Heavy shower snow',\n      701: 'Mist', 711: 'Smoke', 721: 'Haze', 731: 'Sand / dust whirls', 741: 'Fog', 751: 'Sand', 761: 'Dust',\n      762: 'Volcanic ash', 771: 'Squalls', 781: 'Tornado', 800: 'Clear sky', 801: 'Few clouds',\n      802: 'Scattered clouds', 803: 'Broken clouds', 804: 'Overcast clouds',\n    },\n    words: {\n      feels: 'Feels', wind: 'Wind', humidity: 'Humidity', search: 'Search', lat: 'Latitude', lon: 'Longtitude',\n    }\n  },\n  ru: {\n    fullDayName: {\n      0: 'Воскресенье', 1: 'Понедельник', 2: 'Вторник', 3: 'Среда', 4: 'Четверг', 5: 'Пятница', 6: 'Суббота'\n    },\n    shortDayName: {\n      0: 'Вс', 1: 'Пн', 2: 'Вт', 3: 'Ср', 4: 'Чт', 5: 'Пт', 6: 'Сб'\n    },\n    fullMonthName: {\n      0: 'Января', 1: 'Февраля', 2: 'Марта', 3: 'Апреля', 4: 'Мая', 5: 'Июня',\n      6: 'Июля', 7: 'Августа', 8: 'Сентяря', 9: 'Октября', 10: 'Ноября', 11: 'Декабря'\n    },\n    weather:{\n      200: 'Гроза с небольшим дождем', 201: 'Гроза с дождем', 202: 'Гроза с сильным дождем',\n      210: 'Легкая гроза', 211: 'Гроза', 212: 'Сильная гроза', 221: 'Рваная гроза',\n      230: 'Гроза с моросящим дождем', 231: 'Гроза с моросящим дождем', 232: 'Гроза с сильным моросящим дождем',\n      300: 'Моросящий дождь', 301: 'Морось', 302: 'Моросящий дождь', 310: 'Моросящий дождь',\n      311: 'Моросящий дождь', 312: 'Моросящий дождь сильной интенсивности', 313: 'Дождь и дождь под дождем',\n      314: 'Сильный дождь и дождь', 321: 'Дождь', 500: 'Слабый дождь', 501: 'Умеренный дождь',\n      502: 'Сильный дождь', 503: 'Сильный дождь', 504: 'Сильный дождь', 511: 'Ледяной дождь',\n      520: 'Сильный дождь под дождем', 521: 'Сильный дождь', 522: 'Сильный дождь под дождем', 531: 'Сильный дождь под дождем',\n      600: 'Слабый снег', 601: 'Снег', 602: 'Сильный снегопад', 611: 'Мокрый снег', 612: 'Слабый дождь со снегом', 613: 'Мокрый душ',\n      615: 'Небольшой дождь и снег', 616: 'Дождь и снег', 620: 'Легкий снегопад', 621: 'Снег под дождем', 622: 'Снег под сильным дождем',\n      701: 'Туман', 711: 'Дым', 721: 'Дымка', 731: 'Песчано-пылевые вихри', 741: 'Туман', 751: 'Песок', 761: 'Пыль',\n      762: 'Вулканический пепел', 771: 'Шквал', 781: 'Торнадо', 800: 'Чистое небо', 801: 'Немного облаков',\n      802: 'Рассеянные облака', 803: 'Рассеянные облака', 804: 'Пасмурные облака',\n    },\n    words: {\n      feels: 'Ощущается', wind: 'Ветер', humidity: 'Влажность', search: 'Поиск', lat: 'Широта', lon: 'Долгота',\n    }\n  },\n}\n\nexport function translite(lang, key, value) {\n  return word[lang][key][value];\n}\n\nexport function celsiusToFaringate(temp) {\n  return Math.round(temp * (9 / 5) + 32);\n}\n\nexport function getCountryName(code) {\n  return fetch(`https://restcountries.eu/rest/v2/alpha/ru`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => item)\n}\n\nexport function getTimesOfDay() {\n  const hours = new Date().getHours();\n\n  if ( hours > 4 && hours < 8 ) { return 'sunrise'; };\n  if ( hours >= 8 && hours < 11 ) { return 'morning'; };\n  if ( hours >= 11 && hours < 13 ) { return 'noon'; };\n  if ( hours >= 13 && hours < 16 ) { return 'afternoon'; };\n  if ( hours >= 16 && hours < 22 ) { return 'evening'; };\n\n  return 'night';\n}\n\nexport function getCurrentSeason() {\n  const month = new Date().getMonth();\n\n  if ( month >= 2 && month <= 4 ) { return 'spring'; };\n  if ( month >= 5 && month <= 7 ) { return 'summer'; };\n  if ( month >= 8 && month <= 10 ) { return 'autumn'; };\n  \n  return 'winter';\n}\n\nexport function addSero(n) {\n  const addSero = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09'];\n  return n < 10 ? addSero[n] : n;\n}\n","import React from 'react';\nimport { translite } from '../../service';\n\nexport default function Search(props){\n  return (\n    <div className=\"search\">\n      <form className=\"search__form\">\n        <input \n          className=\"search__input\" \n          type=\"text\"\n          placeholder=\"Enter city name\"\n          onChange={ props.onChange }\n          value={ props.value }\n        />\n        <button \n          className=\"button search__button\"\n          onClick={(event) => {\n            props.onClick();\n            event.preventDefault();\n          }}\n        >{ translite(props.lang, 'words', 'search') }</button>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\nimport { translite, celsiusToFaringate, addSero } from '../../service';\n\nexport default class WeatherDay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    currentDateTime: '',\n  }\n\n  getCurrentDateTime() {\n    let date = new Date();\n    date.setUTCSeconds(date.getUTCSeconds()+this.props.weather.timezone);\n    const dayName = translite(this.props.lang, 'shortDayName',date.getUTCDay());\n    const day = date.getUTCDate()\n    const month = translite(this.props.lang,'fullMonthName',date.getUTCMonth());\n    const hour = addSero(date.getUTCHours());\n    const min = addSero(date.getUTCMinutes());\n    this.setState( {currentDateTime:`${dayName} ${day} ${month}  ${hour}:${min}` });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getCurrentDateTime(), 10);\n  }\n\n  componentWillUnmount() {\n   clearInterval(this.timerID);\n  }\n\n  render() {\n    const { weather, isCelsius } = this.props;\n    const temp = isCelsius ? weather.weather.temp : celsiusToFaringate(weather.weather.temp);\n    const feels = isCelsius ? weather.weather.feels : celsiusToFaringate(weather.weather.feels);\n    return (\n      <div className=\"weather-day\">\n        <div className=\"weather-day__city\">{ weather.city.name }, { weather.city.country }</div>\n        <div className=\"weather-day__date-time\">{ this.state.currentDateTime }</div>\n        <div className=\"weather-day__wrapper\">\n          <div className=\"weather-day__temp\">\n            <div className=\"weather-day__temp-value\">{ temp }</div>\n            <div className=\"weather-day__temp-deg\">&deg;</div>\n          </div>\n          <div className=\"weather-day__img\">\n            <img src={`./images/${weather.weather.icon}.png`} alt=''/>\n          </div>\n          <ul className=\"weather-day__more\">\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'weather', weather.weather.id) }</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'feels') }: { feels } &deg;</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'wind') }: { weather.weather.wind.speed } m/c</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'humidity') }: { weather.weather.humidity } %</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { translite } from \"../../service\";\n\nmapboxgl.accessToken = 'pk.eyJ1IjoieXVza292c3MiLCJhIjoiY2szNnRoODJuMDR2NTNubWhmZ2tyNHcweiJ9.nqpNmNuvXFtwx0VFoqqxGQ';\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoom: 20,\n    };\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      center: [this.props.lon, this.props.lat],\n      style: 'mapbox://styles/mapbox/streets-v9',\n      zoom: 10\n    });\n  }\n\n  componentDidUpdate() {\n    this.map.setCenter([this.props.lon, this.props.lat]);\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n    };\n    \n    const lat = (''+this.props.lat).split('.');\n    const lon = (''+this.props.lon).split('.');\n\n    return (\n      <div className=\"geoposition\">\n        <div className='mapContainer'>\n          <div style={style} ref={el => this.mapContainer = el} className='map'/>\n        </div>\n        <p>{translite(this.props.lang,'words', 'lat')}: { lat[0] }&deg;{ lat[1] }'</p>\n        <p>{translite(this.props.lang,'words', 'lon')}: { lon[0] }&deg;{ lon[1] }'</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport function ControlPanel(props) {\n \n  let classNameCelsius;\n  let classNameFaringate;\n\n  if (props.isCelsius) {\n    classNameCelsius = \"button button--selected control-panel__celsius\";\n    classNameFaringate = \"button control-panel__faringate\"\n  } else {\n    classNameCelsius = \"button control-panel__celsius\"\n    classNameFaringate = \"button button--selected control-panel__faringate\"\n  }\n\n  return(\n    <div className=\"control-panel\">\n    <button \n      className=\"button control-panel__update\"\n      onClick={ props.onClickUpdate }\n    ></button>\n    <select \n      value={ props.value }\n      onChange={ props.onChangeLang }\n      className=\"dropdown control-panel__lang\">\n      <option className=\"dropdown__item\" value=\"en\">en</option>\n      <option className=\"dropdown__item\" value=\"ru\">ru</option>\n    </select>\n    <button \n      className={ classNameFaringate }\n      onClick={ props.onClickFaringate }\n    >&deg; F</button>\n    <button \n      className={ classNameCelsius }\n      onClick={ props.onClickCelsius }\n    >&deg; C</button>\n  </div>\n  )\n}\n\n","import React from 'react';\nimport { translite, celsiusToFaringate } from '../../service';\n\nexport function WeatherForecastDay(props) {\n  const { lang, forecast, isCelsius } = props;\n  const temp = isCelsius ? forecast.temp : celsiusToFaringate(forecast.temp);\n  return(\n     <div className=\"weather-forecast__day\">\n      <div className=\"weather-forecast__weekday\">{ translite(lang,'fullDayName', forecast.weekDay) }</div>\n      <div className=\"weather-forecast__temp\">{ temp }&deg;</div>\n      <div className=\"weather-forecast__img\">\n        <img src={`./images/${ forecast.icon }.png`} alt=''/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport Search from '../search/cmp-search';\nimport WeatherDay from '../weatherDay/cmp-weatherDay';\nimport { Map} from '../map/map'\nimport { ControlPanel } from '../controlPanel/cmp-controlPanel';\nimport { WeatherForecastDay } from '../weatherForecastDay/cmp-weatherForecastDay';\nimport { getCountryName } from '../../service';\n\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onClickCelsius = this.onClickCelsius.bind(this);\n    this.onClickFaringate = this.onClickFaringate.bind(this);\n    this.onChangeLang = this.onChangeLang.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onUpdateClick = this.onUpdateClick.bind(this);\n  }\n\n  onSearchChange = event => {\n    this.props.changeSearchString(event.target.value);\n  }\n\n  onChangeLang = event => {\n    this.props.changeLang(event.target.value);\n    localStorage.setItem('lang', event.target.value);\n  }\n\n  onClickCelsius() {\n    this.props.changeUseCelsius(true);\n    localStorage.setItem('isCelsius', true);\n  }\n\n  onClickFaringate() {\n    this.props.changeUseCelsius(false);\n    localStorage.setItem('isCelsius', false);\n  }\n\n  onClick() {\n    const { timesOfDay, season, weatherForBackground, searchString } = this.props;\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n\n    this.props.getWeatherByCity(searchString, 'metric');\n    localStorage.setItem('searchString', searchString); \n  }\n\n  onUpdateClick() {\n    const { timesOfDay, season, weatherForBackground } = this.props;\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n  }\n\n  loadSetting() {\n    if (this.props.isCelsius === 'true') {\n      this.onClickCelsius();\n    } else {\n      this.onClickFaringate();\n    }\n  }\n\n  componentDidUpdate() {\n    document.body.style.background = `url(\"${this.props.backgroundImage}\")`;\n    document.body.style.backgroundSize = 'cover';\n    document.body.style.backgroundRepeat = 'no-repeat';\n    document.body.style.backgroundPosition = 'center center';\n    document.body.style.backgroundAttachment = 'fixed';\n  }\n\n  componentDidMount() {\n    const { timesOfDay, season, weatherForBackground, searchString } = this.props;\n    this.loadSetting();\n\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n\n    if (this.props.searchString === '') {\n      navigator.geolocation.getCurrentPosition(\n        (pos => {this.props.getWeatherByCoord(pos.coords.latitude, pos.coords.longitude)}),\n        this.props.getWeatherByCoord,\n      );\n    } else {\n      this.props.getWeatherByCity(searchString, 'metric');\n    }\n  }\n\n  render() {\n    const { weather,  forecast, lang, isCelsius, searchString, isRequestWeather, isRequestForecast, isRequestBackgroundImage } = this.props;\n\n    if (isRequestWeather || isRequestForecast || isRequestBackgroundImage) {\n      return <div className=\"async-spinner\"></div>\n    }\n\n    if (!weather.city) {\n      return (\n        <div className=\"wrapper\">\n          <header className=\"header\">\n            <ControlPanel\n              value = { lang }\n              isCelsius = { isCelsius }\n              onClickUpdate = { this.onUpdateClick }\n              onClickFaringate = {this.onClickFaringate }\n              onClickCelsius = { this.onClickCelsius }\n              onChangeLang= { this.onChangeLang }\n            />\n            <Search \n              lang={ lang }\n              value={ searchString }\n              onChange= { this.onSearchChange }\n              onClick={ this.onClick }\n            />\n          </header>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <header className=\"header\">\n          <ControlPanel \n            value = { lang }\n            isCelsius={ isCelsius }\n            onClickUpdate= { this.onUpdateClick }\n            onClickFaringate = {this.onClickFaringate }\n            onClickCelsius = { this.onClickCelsius }\n            onChangeLang= { this.onChangeLang }\n          />\n          <Search\n            lang={ lang }\n            value={ searchString }\n            onChange= { this.onSearchChange }\n            onClick={ this.onClick }\n          />\n        </header>\n        <main className=\"main\">\n          <div className=\"weather\">\n            <WeatherDay\n              lang={ lang }\n              isCelsius={ isCelsius }\n              weather={ weather }\n            />\n            <div className=\"weather-forecast\">\n              {forecast && <WeatherForecastDay\n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[0] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[1] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang={ lang }\n                isCelsius={ isCelsius }\n                forecast={ forecast[2] }\n              />}\n            </div>\n          </div>\n          <Map\n            lang={ lang }\n            lat = { weather.city.coord.lat }\n            lon = { weather.city.coord.lon }\n          />\n        </main>\n    </div>\n    )\n  }\n}\n\nexport default Page;\n","import { addSero } from \"../service\";\n\nexport const GET_WEATHER_FORECAST_REQUEST  = 'GET_WEATHER_FORECAST_REQUEST';\nexport const GET_WEATHER_FORECAST_SUCCESS  = 'GET_WEATHER_FORECAST_SUCCESS';\nexport const GET_WEATHER_FORECAST_FAILTURE = 'GET_WEATHER_FORECAST_FAILTURE';\n\nconst PATH_BASE = 'https://api.openweathermap.org/data/2.5/';\nconst FORECAST = 'forecast';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst ID = 'id=';\n\nexport const getWeatherForecastRequest = bool => {\n  return {\n    type: GET_WEATHER_FORECAST_REQUEST,\n    payload: bool\n  }\n}\n\nexport const getWeatherForecastSuccess = item => {\n  return {\n    type: GET_WEATHER_FORECAST_SUCCESS,\n    payload: item\n  }\n}\n\nexport const getWeatherForecastFailture = bool => {\n  return {\n    type: GET_WEATHER_FORECAST_FAILTURE,\n    payload: bool\n  }\n}\n\nexport const getWeatherForecast = (city, units) => {\n  return (dispatch) => {\n    dispatch(getWeatherForecastRequest(true));\n    fetch(`${PATH_BASE}${FORECAST}?${API_KEY}&${UNITS}&${ID}${city}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherForecastRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(items => {\n        dispatch(getWeatherForecastFailture(false));\n        dispatch(getWeatherForecastSuccess(prepareForecast(items)));\n      })\n      .catch(() => dispatch(getWeatherForecastFailture(true)))\n    }\n}\n\nfunction prepareForecast(items) {\n  const result= [];\n  const countDaysOfForecast = 8;\n  for (let i = 0; i < 3; i++){\n    const day = new Date();\n    day.setDate(day.getDate() + i + 1);\n    const dayToStr = day.getFullYear()+'-'+addSero(day.getMonth() + 1)+'-'+addSero(day.getDate());\n    result[i] = {\n      weekDay: day.getDay(),\n      temp: Math.round(items.list.filter(item => item.dt_txt.includes(dayToStr)).reduce((sum, item) => { return sum + item.main.temp }, 0) / countDaysOfForecast),\n      icon: items.list.filter(item => item.dt_txt.includes(`${dayToStr} 12:00:00`))[0].weather[0].icon,\n    }\n  }\n  return result;\n}\n","export const GET_BACKGROUND_REQUEST = 'GET_BACKGROUND_REQUEST';\nexport const GET_BACKGROUND_SUCCESS = 'GET_BACKGROUND_SUCCESS';\nexport const GET_BACKGROUND_FAILTURE = 'GET_BACKGROUND_FAILTURE';\nexport const GET_SEARCH_STRING_BACKGROUND = 'GET_SEARCH_STRING_BACKGROUND';\nexport const GET_WEATHER_FOR_BACKGROUND = 'GET_WEATHER_FOR_BACKGROUND';\n\nconst PATH_BASE = 'https://www.flickr.com/services/rest';\nconst METHOD = 'method=flickr.photos.search';\nconst FORMAT = 'format=json&nojsoncallback=1';\nconst PATH_SEARCH = 'text=';\nconst API_KEY = 'api_key=ad367f61799facf14dd49982b162f318';\n\nexport const getImageRequest = bool => {\n  return {\n    type: GET_BACKGROUND_REQUEST,\n    payload: bool\n  }\n}\n\nexport const getImageSuccess = item => {\n  return {\n    type: GET_BACKGROUND_SUCCESS,\n    payload: item\n  }\n}\n\nexport const getImageFailture = bool => {\n  return {\n    type: GET_BACKGROUND_FAILTURE,\n    payload: bool\n  }\n}\n\nexport const getSearchStringBackground = searchString => {\n  return {\n    type: GET_SEARCH_STRING_BACKGROUND,\n    payload: searchString\n  }\n}\n\nexport const getWeatherForBackground = weather => {\n  return {\n    type: GET_WEATHER_FOR_BACKGROUND,\n    payload: weather\n  }\n}\n\nexport const getBackgroundImage = (searchString) => {\n\n  return (dispatch) => {\n    dispatch(getImageRequest(true));\n    searchString = 'city, '+searchString;\n    fetch(`${PATH_BASE}?${API_KEY}&${METHOD}&${FORMAT}&${PATH_SEARCH}${searchString}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getImageRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => {\n        const rndPhoto = Math.round(Math.random() * item.photos.photo.length);\n        dispatch(getImageFailture(false));\n        dispatch(getImageSuccess(prepareUrl(item.photos.photo[rndPhoto])));\n      })\n      .catch(() => dispatch(getImageFailture(true)))\n    }\n}\n\nfunction prepareUrl(item) {\n  return `https://farm${item.farm}.staticflickr.com/${item.server}/${item.id}_${item.secret}_b.jpg`;\n}\n","export const countrys = {\n  \"BD\": \"Bangladesh\",\n  \"BE\": \"Belgium\",\n  \"BF\": \"Burkina Faso\",\n  \"BG\": \"Bulgaria\",\n  \"BA\": \"Bosnia and Herzegovina\",\n  \"BB\": \"Barbados\",\n  \"WF\": \"Wallis and Futuna\",\n  \"BL\": \"Saint Barthelemy\",\n  \"BM\": \"Bermuda\",\n  \"BN\": \"Brunei\",\n  \"BO\": \"Bolivia\",\n  \"BH\": \"Bahrain\",\n  \"BI\": \"Burundi\",\n  \"BJ\": \"Benin\",\n  \"BT\": \"Bhutan\",\n  \"JM\": \"Jamaica\",\n  \"BV\": \"Bouvet Island\",\n  \"BW\": \"Botswana\",\n  \"WS\": \"Samoa\",\n  \"BQ\": \"Bonaire, Saint Eustatius and Saba\",\n  \"BR\": \"Brazil\",\n  \"BS\": \"Bahamas\",\n  \"JE\": \"Jersey\",\n  \"BY\": \"Belarus\",\n  \"BZ\": \"Belize\",\n  \"RU\": \"Russia\",\n  \"RW\": \"Rwanda\",\n  \"RS\": \"Serbia\",\n  \"TL\": \"East Timor\",\n  \"RE\": \"Reunion\",\n  \"TM\": \"Turkmenistan\",\n  \"TJ\": \"Tajikistan\",\n  \"RO\": \"Romania\",\n  \"TK\": \"Tokelau\",\n  \"GW\": \"Guinea-Bissau\",\n  \"GU\": \"Guam\",\n  \"GT\": \"Guatemala\",\n  \"GS\": \"South Georgia and the South Sandwich Islands\",\n  \"GR\": \"Greece\",\n  \"GQ\": \"Equatorial Guinea\",\n  \"GP\": \"Guadeloupe\",\n  \"JP\": \"Japan\",\n  \"GY\": \"Guyana\",\n  \"GG\": \"Guernsey\",\n  \"GF\": \"French Guiana\",\n  \"GE\": \"Georgia\",\n  \"GD\": \"Grenada\",\n  \"GB\": \"United Kingdom\",\n  \"GA\": \"Gabon\",\n  \"SV\": \"El Salvador\",\n  \"GN\": \"Guinea\",\n  \"GM\": \"Gambia\",\n  \"GL\": \"Greenland\",\n  \"GI\": \"Gibraltar\",\n  \"GH\": \"Ghana\",\n  \"OM\": \"Oman\",\n  \"TN\": \"Tunisia\",\n  \"JO\": \"Jordan\",\n  \"HR\": \"Croatia\",\n  \"HT\": \"Haiti\",\n  \"HU\": \"Hungary\",\n  \"HK\": \"Hong Kong\",\n  \"HN\": \"Honduras\",\n  \"HM\": \"Heard Island and McDonald Islands\",\n  \"VE\": \"Venezuela\",\n  \"PR\": \"Puerto Rico\",\n  \"PS\": \"Palestinian Territory\",\n  \"PW\": \"Palau\",\n  \"PT\": \"Portugal\",\n  \"SJ\": \"Svalbard and Jan Mayen\",\n  \"PY\": \"Paraguay\",\n  \"IQ\": \"Iraq\",\n  \"PA\": \"Panama\",\n  \"PK\": \"Pakistan\",\n  \"PH\": \"Philippines\",\n  \"PN\": \"Pitcairn\",\n  \"PL\": \"Poland\",\n  \"PM\": \"Saint Pierre and Miquelon\",\n  \"ZM\": \"Zambia\",\n  \"EH\": \"Western Sahara\",\n  \"EE\": \"Estonia\",\n  \"EG\": \"Egypt\",\n  \"ZA\": \"South Africa\",\n  \"EC\": \"Ecuador\",\n  \"IT\": \"Italy\",\n  \"VN\": \"Vietnam\",\n  \"SB\": \"Solomon Islands\",\n  \"ET\": \"Ethiopia\",\n  \"SO\": \"Somalia\",\n  \"ZW\": \"Zimbabwe\",\n  \"SA\": \"Saudi Arabia\",\n  \"ES\": \"Spain\",\n  \"ER\": \"Eritrea\",\n  \"ME\": \"Montenegro\",\n  \"MD\": \"Moldova\",\n  \"MG\": \"Madagascar\",\n  \"MF\": \"Saint Martin\",\n  \"MA\": \"Morocco\",\n  \"MC\": \"Monaco\",\n  \"UZ\": \"Uzbekistan\",\n  \"MM\": \"Myanmar\",\n  \"ML\": \"Mali\",\n  \"MO\": \"Macao\",\n  \"MN\": \"Mongolia\",\n  \"MH\": \"Marshall Islands\",\n  \"MK\": \"Macedonia\",\n  \"MU\": \"Mauritius\",\n  \"MT\": \"Malta\",\n  \"MW\": \"Malawi\",\n  \"MV\": \"Maldives\",\n  \"MQ\": \"Martinique\",\n  \"MP\": \"Northern Mariana Islands\",\n  \"MS\": \"Montserrat\",\n  \"MR\": \"Mauritania\",\n  \"IM\": \"Isle of Man\",\n  \"UG\": \"Uganda\",\n  \"TZ\": \"Tanzania\",\n  \"MY\": \"Malaysia\",\n  \"MX\": \"Mexico\",\n  \"IL\": \"Israel\",\n  \"FR\": \"France\",\n  \"IO\": \"British Indian Ocean Territory\",\n  \"SH\": \"Saint Helena\",\n  \"FI\": \"Finland\",\n  \"FJ\": \"Fiji\",\n  \"FK\": \"Falkland Islands\",\n  \"FM\": \"Micronesia\",\n  \"FO\": \"Faroe Islands\",\n  \"NI\": \"Nicaragua\",\n  \"NL\": \"Netherlands\",\n  \"NO\": \"Norway\",\n  \"NA\": \"Namibia\",\n  \"VU\": \"Vanuatu\",\n  \"NC\": \"New Caledonia\",\n  \"NE\": \"Niger\",\n  \"NF\": \"Norfolk Island\",\n  \"NG\": \"Nigeria\",\n  \"NZ\": \"New Zealand\",\n  \"NP\": \"Nepal\",\n  \"NR\": \"Nauru\",\n  \"NU\": \"Niue\",\n  \"CK\": \"Cook Islands\",\n  \"XK\": \"Kosovo\",\n  \"CI\": \"Ivory Coast\",\n  \"CH\": \"Switzerland\",\n  \"CO\": \"Colombia\",\n  \"CN\": \"China\",\n  \"CM\": \"Cameroon\",\n  \"CL\": \"Chile\",\n  \"CC\": \"Cocos Islands\",\n  \"CA\": \"Canada\",\n  \"CG\": \"Republic of the Congo\",\n  \"CF\": \"Central African Republic\",\n  \"CD\": \"Democratic Republic of the Congo\",\n  \"CZ\": \"Czech Republic\",\n  \"CY\": \"Cyprus\",\n  \"CX\": \"Christmas Island\",\n  \"CR\": \"Costa Rica\",\n  \"CW\": \"Curacao\",\n  \"CV\": \"Cape Verde\",\n  \"CU\": \"Cuba\",\n  \"SZ\": \"Swaziland\",\n  \"SY\": \"Syria\",\n  \"SX\": \"Sint Maarten\",\n  \"KG\": \"Kyrgyzstan\",\n  \"KE\": \"Kenya\",\n  \"SS\": \"South Sudan\",\n  \"SR\": \"Suriname\",\n  \"KI\": \"Kiribati\",\n  \"KH\": \"Cambodia\",\n  \"KN\": \"Saint Kitts and Nevis\",\n  \"KM\": \"Comoros\",\n  \"ST\": \"Slovenia\",\n  \"KP\": \"North Korea\",\n  \"KW\": \"Kuwait\",\n  \"SN\": \"Senegal\",\n  \"SM\": \"San Marino\",\n  \"SL\": \"Sierra Leone\",\n  \"SC\": \"Seychelles\",\n  \"KZ\": \"Kazakhstan\",\n  \"KY\": \"Cayman Islands\",\n  \"SG\": \"Singapore\",\n  \"SE\": \"Sweden\",\n  \"SD\": \"Sudan\",\n  \"DO\": \"Dominican Republic\",\n  \"DM\": \"Dominica\",\n  \"DJ\": \"Djibouti\",\n  \"DK\": \"Denmark\",\n  \"VG\": \"British Virgin Islands\",\n  \"DE\": \"Germany\",\n  \"YE\": \"Yemen\",\n  \"DZ\": \"Algeria\",\n  \"US\": \"United States\",\n  \"UY\": \"Uruguay\",\n  \"YT\": \"Mayotte\",\n  \"UM\": \"United States Minor Outlying Islands\",\n  \"LB\": \"Lebanon\",\n  \"LC\": \"Saint Lucia\",\n  \"LA\": \"Laos\",\n  \"TV\": \"Tuvalu\",\n  \"TW\": \"Taiwan\",\n  \"TT\": \"Trinidad and Tobago\",\n  \"TR\": \"Turkey\",\n  \"LK\": \"Sri Lanka\",\n  \"LI\": \"Liechtenstein\",\n  \"LV\": \"Latvia\",\n  \"TO\": \"Tonga\",\n  \"LT\": \"Lithuania\",\n  \"LU\": \"Luxembourg\",\n  \"LR\": \"Liberia\",\n  \"LS\": \"Lesotho\",\n  \"TH\": \"Thailand\",\n  \"TF\": \"French Southern Territories\",\n  \"TG\": \"Togo\",\n  \"TD\": \"Chad\",\n  \"TC\": \"Turks and Caicos Islands\",\n  \"LY\": \"Libya\",\n  \"VA\": \"Vatican\",\n  \"VC\": \"Saint Vincent and the Grenadines\",\n  \"AE\": \"United Arab Emirates\",\n  \"AD\": \"Andorra\",\n  \"AG\": \"Antigua and Barbuda\",\n  \"AF\": \"Afghanistan\",\n  \"AI\": \"Anguilla\",\n  \"VI\": \"U.S. Virgin Islands\",\n  \"IS\": \"Iceland\",\n  \"IR\": \"Iran\",\n  \"AM\": \"Armenia\",\n  \"AL\": \"Albania\",\n  \"AO\": \"Angola\",\n  \"AQ\": \"Antarctica\",\n  \"AS\": \"American Samoa\",\n  \"AR\": \"Argentina\",\n  \"AU\": \"Australia\",\n  \"AT\": \"Austria\",\n  \"AW\": \"Aruba\",\n  \"IN\": \"India\",\n  \"AX\": \"Aland Islands\",\n  \"AZ\": \"Azerbaijan\",\n  \"IE\": \"Ireland\",\n  \"ID\": \"Indonesia\",\n  \"UA\": \"Ukraine\",\n  \"QA\": \"Qatar\",\n  \"MZ\": \"Mozambique\"}","import { getWeatherForecast } from '../actions/forecast';\nimport { getWeatherForBackground } from '../actions/backgroundImage';\nimport { countrys  } from \"../countrys\";\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILTURE = 'GET_WEATHER_FAILTURE';\n\nconst PATH_BASE = 'https://api.openweathermap.org/data/2.5/';\nconst WEATHER = 'weather';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst PATH_SEARCH = 'q=';\n\nexport const getWeatherRequest = bool => {\n  return {\n    type: GET_WEATHER_REQUEST,\n    payload: bool\n  }\n}\n\nexport const getWeatherSuccess = item => {\n  return {\n    type: GET_WEATHER_SUCCESS,\n    payload: item\n  }\n}\n\nexport const getWeatherFailture = bool => {\n  return {\n    type: GET_WEATHER_FAILTURE,\n    payload: bool\n  }\n}\n\nexport const getWeatherByCity = (city) => {\n  return (dispatch) => {\n    dispatch(getWeatherRequest(true));\n\n    fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&${PATH_SEARCH}${city}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => {\n        dispatch(getWeatherForecast(item.id));\n        dispatch(getWeatherForBackground(item.weather[0].main));\n        dispatch(getWeatherFailture(false));\n        dispatch(getWeatherSuccess(preapreWeather(item)));\n      })\n      \n      .catch(() => dispatch(getWeatherFailture(true)))\n    }\n}\n\nexport const getWeatherByCoord = (lat, lon) => {\n\n  return async (dispatch) => {\n    dispatch(getWeatherRequest(true));\n\n    let coord = {\n      lat: lat,\n      lon: lon,\n    }\n\n    if (!lon) {\n      coord = await getCoordsByIP();\n    }\n\n    fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&lat=${coord.lat}&lon=${coord.lon}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        dispatch(getWeatherRequest(false));\n        return response;\n      })\n      .then(response => response.json())\n      .then(item => {\n        dispatch(getWeatherForecast(item.id));\n        dispatch(getWeatherForBackground(item.weather[0].main));\n        dispatch(getWeatherFailture(false));\n        dispatch(getWeatherSuccess(preapreWeather(item)));\n      })\n      .catch(() => dispatch(getWeatherFailture(true)))\n    }\n}\n\nfunction preapreWeather(item) {\n  const result = {\n    id: item.id,\n    date: item.dt,\n    timezone: item.timezone,\n    city: {\n      name: item.name,\n      country: countrys[item.sys.country],\n      coord:{\n        lat: item.coord.lat,\n        lon: item.coord.lon,\n      },\n    },\n    weather: {\n      id: item.weather[0].id,\n      temp: Math.round(item.main.temp),\n      feels: Math.round(13.12 + 0.6215*Math.round(item.main.temp) - 11.37*Math.pow(item.wind.speed, 0.16) + 0.3965*Math.round(item.main.temp)*Math.pow(item.wind.speed, 0.16)),\n      humidity: item.main.humidity,\n      icon: item.weather[0].icon,\n      wind: {\n        deg: item.wind.deg,\n        speed: item.wind.speed,\n      },\n    },\n  }\n  return result;\n}\n\nasync function getCoordsByIP() {\n  const PATH_BASE = 'https://ipinfo.io/';\n  const API_KEY = 'token=0f3c2185f8d434';\n  const response = await fetch(`${PATH_BASE}?${API_KEY}`);\n\n  if (!response.ok) {\n    throw new Error(`getCoordsByIP failed, HTTP status ${response.status}`);\n  }\n\n  const coords = await response.json();\n\n  const stringCoord = coords.loc;\n  const commaIndex = stringCoord.indexOf(',');\n\n  return {\n   lat: stringCoord.slice(0, commaIndex),\n   lon: stringCoord.slice(commaIndex+1),\n  }\n}\n","import { connect } from 'react-redux';\nimport Page from './cmp-page';\nimport { getWeatherByCity, getWeatherByCoord } from '../../actions/weather';\nimport { getWeatherForecast } from '../../actions/forecast';\nimport { changeLang, changeUseCelsius, changeSearchString } from '../../actions/controlPanel';\nimport { getBackgroundImage } from \"../../actions/backgroundImage\";\n\nfunction mapStateToProps (state) {\n  const { weather, isRequestWeather, isError } = state.weather;\n  const { forecast, isRequestForecast, isErrorForecast } = state.forecast;\n  const { lang, isCelsius, searchString } = state.controlPanel;\n  const { backgroundImage, timesOfDay, season, weatherForBackground, isRequestBackgroundImage  } = state.backgroundImage;\n  return {\n    isRequestWeather,\n    isRequestForecast,\n    isRequestBackgroundImage,\n    searchString,\n    weather,\n    isError,\n    forecast,\n    isErrorForecast,\n    lang,\n    isCelsius,\n    backgroundImage,\n    timesOfDay,\n    season,\n    weatherForBackground,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getWeatherByCity: (city) => dispatch(getWeatherByCity(city)),\n    getWeatherByCoord: (lat, lon) => dispatch(getWeatherByCoord(lat, lon)),\n    getWeatherForecast: (city) => dispatch(getWeatherForecast(city)),\n    changeLang: (lang) => dispatch(changeLang(lang)),\n    changeUseCelsius: (isCelsius) => dispatch(changeUseCelsius(isCelsius)),\n    changeSearchString: (searchString) => dispatch(changeSearchString(searchString)),\n    getBackgroundImage: (searchString) => dispatch(getBackgroundImage(searchString)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n\n","export const CHANGE_LANG  = 'CHANGE_LANG';\nexport const CHANGE_USE_CELSIUS  = 'USE_CELSIUS';\nexport const CHANGE_SEARCH_STRING = 'CHANGE_SEARCH_STRING';\n\nexport const changeLang = lang => {\n  return {\n    type: CHANGE_LANG,\n    payload: lang,\n  }\n}\n\nexport const changeUseCelsius = isCelsius => {\n  return {\n    type: CHANGE_USE_CELSIUS,\n    payload: isCelsius,\n  }\n}\n\nexport const changeSearchString = searchString => {\n  return {\n    type: CHANGE_SEARCH_STRING,\n    payload: searchString,\n  }\n}","import {\n  GET_WEATHER_REQUEST,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILTURE,\n  } from '../actions/weather';\n\nconst initState = {\n  weather: '',\n  isRequestWeather: false,\n  isError: false\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_REQUEST: {\n      return {\n        ...state,\n        isRequestWeather: action.payload\n      }\n    }\n    case GET_WEATHER_FAILTURE: {\n      return {\n        ...state,\n        isError: action.payload\n      }\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...state,\n        weather: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  GET_WEATHER_FORECAST_REQUEST,\n  GET_WEATHER_FORECAST_SUCCESS,\n  GET_WEATHER_FORECAST_FAILTURE,\n  } from '../actions/forecast';\n\nconst initState = {\n  forecast: '',\n  isRequestForecast: false,\n  isErrorForecast: false\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_FORECAST_REQUEST: {\n      return {\n        ...state,\n        isRequestForecast: action.payload\n      }\n    }\n    case GET_WEATHER_FORECAST_FAILTURE: {\n      return {\n        ...state,\n        isErrorForecast: action.payload\n      }\n    }\n    case GET_WEATHER_FORECAST_SUCCESS: {\n      return {\n        ...state,\n        forecast: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  CHANGE_LANG,\n  CHANGE_USE_CELSIUS,\n  CHANGE_SEARCH_STRING,\n  } from '../actions/controlPanel';\n\nconst initState = {\n  lang: localStorage.getItem('lang') ? localStorage.getItem('lang') : 'en',\n  isCelsius: localStorage.getItem('isCelsius') ? localStorage.getItem('isCelsius') : 'true',\n  searchString: '',// localStorage.getItem('searchString') ? localStorage.getItem('searchString') : '',\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case CHANGE_LANG: {\n      return {\n        ...state,\n        lang: action.payload\n      }\n    }\n    case CHANGE_USE_CELSIUS: {\n      return {\n        ...state,\n        isCelsius: action.payload\n      }\n    }\n    case CHANGE_SEARCH_STRING: {\n      return {\n        ...state,\n        searchString: action.payload\n      }\n    }\n    default:\n  }\n  return state;\n}\n","import { getCurrentSeason, getTimesOfDay } from '../service'\nimport {\n  GET_BACKGROUND_REQUEST,\n  GET_BACKGROUND_SUCCESS,\n  GET_BACKGROUND_FAILTURE,\n  GET_WEATHER_FOR_BACKGROUND,\n } from '../actions/backgroundImage';\n\nconst initState = {\n    backgroundImage: '',\n    timesOfDay: getTimesOfDay(),\n    season: getCurrentSeason(),\n    weatherForBackground: '',\n    isRequestBackgroundImage: false,\n    isErrorBackgroundImage: false\n}\n\n  export default function(state = initState, action) {\n    switch (action.type) {\n      case GET_BACKGROUND_REQUEST: {\n        return {\n          ...state,\n          isRequestBackgroundImage: action.payload\n        }\n      }\n      case GET_BACKGROUND_SUCCESS: {\n        return {\n          ...state,\n          backgroundImage: action.payload\n        }\n      }\n      case GET_BACKGROUND_FAILTURE: {\n        return {\n          ...state,\n          isErrorBackgroundImage: action.payload\n        }\n      }\n      case GET_WEATHER_FOR_BACKGROUND: {\n        return {\n          ...state,\n          weatherForBackground: action.payload\n        }\n      }\n      default:\n    }\n    return state;\n  }","import { combineReducers } from 'redux';\nimport weather from './weather';\nimport forecast from './forecast';\nimport controlPanel from './controlPanel';\nimport backgroundImage from \"./backgroundImage\";\n\nexport default combineReducers({\n  weather,\n  forecast,\n  controlPanel,\n  backgroundImage,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport Page from './ui/page/cnt-page';\nimport configureStore from './store/configureStore';\nimport './styles/main.scss';\n\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store = {store}>\n    <Page />\n  </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//https://github.com/stowball/dummys-guide-to-redux-and-thunk-react\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}