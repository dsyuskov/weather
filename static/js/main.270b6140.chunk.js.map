{"version":3,"sources":["serviceWorker.js","utils/translite.js","ui/search/cmp-search.js","utils/service.js","ui/weatherDay/cmp-weatherDay.js","ui/weatherForecastDay/cmp-weatherForecastDay.js","ui/map/map.js","ui/controlPanel/cmp-controlPanel.js","ui/page/cmp-page.js","actions/forecast.js","actions/backgroundImage.js","utils/countries.js","actions/weather.js","ui/page/cnt-page.js","actions/controlPanel.js","reducers/weather.js","reducers/forecast.js","reducers/controlPanel.js","reducers/backgroundImage.js","reducers/index.js","index.js","store/configureStore.js"],"names":["Boolean","window","location","hostname","match","word","en","fullDayName","0","1","2","3","4","5","6","shortDayName","fullMonthName","7","8","9","10","11","weather","200","201","202","210","211","212","221","230","231","232","300","301","302","310","311","312","313","314","321","500","501","502","503","504","511","520","521","522","531","600","601","602","611","612","613","615","616","620","621","622","701","711","721","731","741","751","761","762","771","781","800","801","802","803","804","words","feels","wind","humidity","search","lat","lon","searchPlaceholder","ru","translite","lang","key","value","Search","props","className","type","placeholder","onChange","onClick","event","preventDefault","celsiusToFaringate","temp","Math","round","addSero","n","WeatherDay","state","currentDateTime","date","Date","setUTCSeconds","getUTCSeconds","this","timezone","dayName","getUTCDay","day","getUTCDate","month","getUTCMonth","hour","getUTCHours","min","getUTCMinutes","setState","timerID","setInterval","getCurrentDateTime","clearInterval","isCelsius","city","name","country","src","icon","alt","id","speed","React","Component","WeatherForecastDay","forecast","weekDay","mapboxgl","accessToken","Map","zoom","map","container","mapContainer","center","style","setCenter","remove","split","position","width","height","ref","el","ControlPanel","classNameCelsius","classNameFaringate","onClickUpdate","onChangeLang","onClickFaringate","onClickCelsius","Page","onSearchChange","changeSearchString","target","changeLang","localStorage","setItem","bind","onUpdateClick","changeUseCelsius","timesOfDay","season","weatherForBackground","searchString","getBackgroundImage","getWeatherByCity","document","body","backgroundImage","navigator","geolocation","getCurrentPosition","pos","getWeatherByCoord","coords","latitude","longitude","isRequestWeather","isRequestForecast","isRequestBackgroundImage","coord","getWeatherForecastRequest","bool","payload","getWeatherForecastFailture","getWeatherForecast","dispatch","fetch","then","response","ok","Error","statusText","json","items","result","i","setDate","getDate","dayToStr","getFullYear","getMonth","getDay","list","filter","item","dt_txt","includes","reduce","sum","main","prepareForecast","catch","getImageRequest","getImageFailture","getWeatherForBackground","countries","BD","BE","BF","BG","BA","BB","WF","BL","BM","BN","BO","BH","BI","BJ","BT","JM","BV","BW","WS","BQ","BR","BS","JE","BY","BZ","RU","RW","RS","TL","RE","TM","TJ","RO","TK","GW","GU","GT","GS","GR","GQ","GP","JP","GY","GG","GF","GE","GD","GB","GA","SV","GN","GM","GL","GI","GH","OM","TN","JO","HR","HT","HU","HK","HN","HM","VE","PR","PS","PW","PT","SJ","PY","IQ","PA","PK","PH","PN","PL","PM","ZM","EH","EE","EG","ZA","EC","IT","VN","SB","ET","SO","ZW","SA","ES","ER","ME","MD","MG","MF","MA","MC","UZ","MM","ML","MO","MN","MH","MK","MU","MT","MW","MV","MQ","MP","MS","MR","IM","UG","TZ","MY","MX","IL","FR","IO","SH","FI","FJ","FK","FM","FO","NI","NL","NO","NA","VU","NC","NE","NF","NG","NZ","NP","NR","NU","CK","XK","CI","CH","CO","CN","CM","CL","CC","CA","CG","CF","CD","CZ","CY","CX","CR","CW","CV","CU","SZ","SY","SX","KG","KE","SS","SR","KI","KH","KN","KM","ST","KP","KW","SN","SM","SL","SC","KZ","KY","SG","SE","SD","DO","DM","DJ","DK","VG","DE","YE","DZ","US","UY","YT","UM","LB","LC","LA","TV","TW","TT","TR","LK","LI","LV","TO","LT","LU","LR","LS","TH","TF","TG","TD","TC","LY","VA","VC","AE","AD","AG","AF","AI","VI","IS","IR","AM","AL","AO","AQ","AS","AR","AU","AT","AW","IN","AX","AZ","IE","ID","UA","QA","MZ","getWeatherRequest","getWeatherSuccess","getWeatherFailture","preapreWeather","dt","sys","deg","getCoordsByIP","a","status","stringCoord","loc","commaIndex","indexOf","slice","connect","isErrorWeather","isErrorForecast","controlPanel","rndPhoto","random","photos","photo","length","getImageSuccess","farm","server","secret","prepareUrl","initState","getItem","hours","getHours","getTimesOfDay","getCurrentSeason","isErrorBackgroundImage","combineReducers","action","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"gNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2D,+CClBAC,EAAO,CACXC,GAAI,CACFC,YAAa,CACXC,EAAG,SAAUC,EAAG,SAAUC,EAAG,UAAWC,EAAG,YAAaC,EAAG,WAAYC,EAAG,SAAUC,EAAG,YAEzFC,aAAc,CACZP,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,MAAOC,EAAG,OAEjEE,cAAe,CACbR,EAAG,UACHC,EAAG,WACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHG,EAAG,SACHC,EAAG,YACHC,EAAG,UACHC,GAAI,WACJC,GAAI,YAENC,QAAS,CACPC,IAAK,+BACLC,IAAK,yBACLC,IAAK,+BACLC,IAAK,qBACLC,IAAK,eACLC,IAAK,qBACLC,IAAK,sBACLC,IAAK,kCACLC,IAAK,4BACLC,IAAK,kCACLC,IAAK,0BACLC,IAAK,UACLC,IAAK,0BACLC,IAAK,+BACLC,IAAK,eACLC,IAAK,+BACLC,IAAK,0BACLC,IAAK,gCACLC,IAAK,iBACLC,IAAK,aACLC,IAAK,gBACLC,IAAK,uBACLC,IAAK,kBACLC,IAAK,eACLC,IAAK,gBACLC,IAAK,8BACLC,IAAK,cACLC,IAAK,8BACLC,IAAK,qBACLC,IAAK,aACLC,IAAK,OACLC,IAAK,aACLC,IAAK,QACLC,IAAK,qBACLC,IAAK,eACLC,IAAK,sBACLC,IAAK,gBACLC,IAAK,oBACLC,IAAK,cACLC,IAAK,oBACLC,IAAK,OACLC,IAAK,QACLC,IAAK,OACLC,IAAK,qBACLC,IAAK,MACLC,IAAK,OACLC,IAAK,OACLC,IAAK,eACLC,IAAK,UACLC,IAAK,UACLC,IAAK,YACLC,IAAK,aACLC,IAAK,mBACLC,IAAK,gBACLC,IAAK,mBAEPC,MAAO,CACLC,MAAO,QAASC,KAAM,OAAQC,SAAU,WAAYC,OAAQ,SAAUC,IAAK,WAAYC,IAAK,aAAcC,kBAAmB,oBAGjIC,GAAI,CACF/E,YAAa,CACXC,EAAG,qEAAeC,EAAG,qEAAeC,EAAG,6CAAWC,EAAG,iCAASC,EAAG,6CAAWC,EAAG,6CAAWC,EAAG,8CAE/FC,aAAc,CACZP,EAAG,eAAMC,EAAG,eAAMC,EAAG,eAAMC,EAAG,eAAMC,EAAG,eAAMC,EAAG,eAAMC,EAAG,gBAE3DE,cAAe,CACbR,EAAG,uCACHC,EAAG,6CACHC,EAAG,iCACHC,EAAG,uCACHC,EAAG,qBACHC,EAAG,2BACHC,EAAG,2BACHG,EAAG,6CACHC,EAAG,6CACHC,EAAG,6CACHC,GAAI,uCACJC,GAAI,8CAENC,QAAS,CACPC,IAAK,oIACLC,IAAK,6EACLC,IAAK,wHACLC,IAAK,sEACLC,IAAK,iCACLC,IAAK,4EACLC,IAAK,sEACLC,IAAK,oIACLC,IAAK,oIACLC,IAAK,+KACLC,IAAK,wFACLC,IAAK,uCACLC,IAAK,wFACLC,IAAK,wFACLC,IAAK,wFACLC,IAAK,kNACLC,IAAK,+HACLC,IAAK,kHACLC,IAAK,iCACLC,IAAK,sEACLC,IAAK,wFACLC,IAAK,4EACLC,IAAK,4EACLC,IAAK,4EACLC,IAAK,4EACLC,IAAK,oIACLC,IAAK,4EACLC,IAAK,oIACLC,IAAK,oIACLC,IAAK,gEACLC,IAAK,2BACLC,IAAK,8FACLC,IAAK,gEACLC,IAAK,wHACLC,IAAK,0DACLC,IAAK,wHACLC,IAAK,iEACLC,IAAK,wFACLC,IAAK,mFACLC,IAAK,8HACLC,IAAK,iCACLC,IAAK,qBACLC,IAAK,iCACLC,IAAK,uHACLC,IAAK,iCACLC,IAAK,iCACLC,IAAK,2BACLC,IAAK,gHACLC,IAAK,iCACLC,IAAK,6CACLC,IAAK,gEACLC,IAAK,wFACLC,IAAK,oGACLC,IAAK,oGACLC,IAAK,+FAEPC,MAAO,CACLC,MAAO,yDAAaC,KAAM,iCAASC,SAAU,yDAAaC,OAAQ,iCAASC,IAAK,uCAAUC,IAAK,6CAAWC,kBAAmB,sIAKpH,SAASE,EAAUC,EAAMC,EAAKC,GAC3C,OAAOrF,EAAKmF,GAAMC,GAAKC,GCrKV,SAASC,EAAOC,GAC7B,OACE,yBAAKC,UAAU,UACb,0BAAMA,UAAU,gBACd,2BACEA,UAAU,gBACVC,KAAK,OACLC,YAAaR,EAAUK,EAAMJ,KAAM,QAAS,qBAC5CQ,SAAUJ,EAAMI,SAChBN,MAAOE,EAAMF,QAEf,4BACEG,UAAU,wBACVI,QAAS,SAACC,GACRN,EAAMK,UACNC,EAAMC,mBAEPZ,EAAUK,EAAMJ,KAAM,QAAS,aCpBnC,SAASY,EAAmBC,GACjC,OAAOC,KAAKC,MAAU,IAAJF,EAAiB,IAyB9B,SAASG,EAAQC,GACtB,OAAOA,EAAI,GAAJ,WAAaA,GAAMA,E,ICvBPC,E,2MACnBC,MAAQ,CACNC,gBAAiB,I,oFAIjB,IAAIC,EAAO,IAAIC,KACfD,EAAKE,cAAcF,EAAKG,gBAAgBC,KAAKrB,MAAMtE,QAAQ4F,UAC3D,IAAMC,EAAU5B,EAAU0B,KAAKrB,MAAMJ,KAAM,eAAeqB,EAAKO,aACzDC,EAAMR,EAAKS,aACXC,EAAQhC,EAAU0B,KAAKrB,MAAMJ,KAAK,gBAAgBqB,EAAKW,eACvDC,EAAOjB,EAAQK,EAAKa,eACpBC,EAAMnB,EAAQK,EAAKe,iBACzBX,KAAKY,SAAU,CAACjB,gBAAgB,GAAD,OAAIO,EAAJ,YAAeE,EAAf,YAAsBE,EAAtB,aAAgCE,EAAhC,YAAwCE,O,0CAGpD,IAAD,OAClBV,KAAKa,QAAUC,aAAY,kBAAM,EAAKC,uBAAsB,M,6CAI7DC,cAAchB,KAAKa,W,+BAGV,IAAD,EACwBb,KAAKrB,MAA5BtE,EADD,EACCA,QAAS4G,EADV,EACUA,UACX7B,EAAO6B,EAAY5G,EAAQA,QAAQ+E,KAAOD,EAAmB9E,EAAQA,QAAQ+E,MAC7EtB,EAAQmD,EAAY5G,EAAQA,QAAQyD,MAAQqB,EAAmB9E,EAAQA,QAAQyD,OACrF,OACE,yBAAKc,UAAU,eACb,yBAAKA,UAAU,qBAAsBvE,EAAQ6G,KAAKC,KAAlD,KAA4D9G,EAAQ6G,KAAKE,SACzE,yBAAKxC,UAAU,0BAA2BoB,KAAKN,MAAMC,iBACrD,yBAAKf,UAAU,wBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BAA4BQ,GAC3C,yBAAKR,UAAU,yBAAf,SAEF,yBAAKA,UAAU,oBACb,yBAAKyC,IAAG,mBAAchH,EAAQA,QAAQiH,KAA9B,QAA0CC,IAAI,MAExD,wBAAI3C,UAAU,qBACZ,wBAAIA,UAAU,0BAA2BN,EAAU0B,KAAKrB,MAAMJ,KAAK,UAAWlE,EAAQA,QAAQmH,KAC9F,wBAAI5C,UAAU,0BAA2BN,EAAU0B,KAAKrB,MAAMJ,KAAK,QAAS,SAA5E,KAA0FT,EAA1F,SACA,wBAAIc,UAAU,0BAA2BN,EAAU0B,KAAKrB,MAAMJ,KAAK,QAAS,QAA5E,KAAyFlE,EAAQA,QAAQ0D,KAAK0D,MAA9G,QACA,wBAAI7C,UAAU,0BAA2BN,EAAU0B,KAAKrB,MAAMJ,KAAK,QAAS,YAA5E,KAA6FlE,EAAQA,QAAQ2D,SAA7G,a,GA5C4B0D,IAAMC,WCA/B,SAASC,EAAmBjD,GAAQ,IACzCJ,EAA8BI,EAA9BJ,KAAMsD,EAAwBlD,EAAxBkD,SACRzC,EADgCT,EAAdsC,UACCY,EAASzC,KAAOD,EAAmB0C,EAASzC,MACrE,OACE,yBAAKR,UAAU,yBACb,yBAAKA,UAAU,6BAA8BN,EAAUC,EAAM,cAAesD,EAASC,UACrF,yBAAKlD,UAAU,0BAA2BQ,EAA1C,QACA,yBAAKR,UAAU,yBACb,yBAAKyC,IAAG,mBAAcQ,EAASP,KAAvB,QAAmCC,IAAI,O,qBCRvDQ,IAASC,YAAc,6FAEhB,IAAMC,EAAb,YACE,WAAYtD,GAAQ,IAAD,8BACjB,4CAAMA,KACDe,MAAQ,CACXwC,KAAM,IAHS,EADrB,iFASIlC,KAAKmC,IAAM,IAAIJ,IAASE,IAAI,CAC1BG,UAAWpC,KAAKqC,aAChBC,OAAQ,CAACtC,KAAKrB,MAAMR,IAAK6B,KAAKrB,MAAMT,KACpCqE,MAAO,oCACPL,KAAM,OAbZ,2CAkBIlC,KAAKmC,IAAIK,UAAU,CAACxC,KAAKrB,MAAMR,IAAK6B,KAAKrB,MAAMT,QAlBnD,6CAsBI8B,KAAKmC,IAAIM,WAtBb,+BAyBY,IAAD,OAODvE,EAAM,UAAI8B,KAAKrB,MAAMT,KAAOwE,MAAM,KAClCvE,EAAM,UAAI6B,KAAKrB,MAAMR,KAAOuE,MAAM,KAExC,OACE,yBAAK9D,UAAU,eACb,yBAAKA,UAAU,gBACb,yBAAK2D,MAZG,CACZI,SAAU,WACVC,MAAO,OACPC,OAAQ,QASeC,IAAK,SAACC,GAAD,OAAQ,EAAKV,aAAeU,GAAInE,UAAU,SAEpE,2BACPN,EAAU0B,KAAKrB,MAAMJ,KAAK,QAAS,OAD5B,IAGP,IACCL,EAAI,GAJE,OAMNA,EAAI,GANE,KASA,2BACPI,EAAU0B,KAAKrB,MAAMJ,KAAK,QAAS,OAD5B,IAGP,IACCJ,EAAI,GAJE,OAMNA,EAAI,GANE,UAjDR,GAAyBuD,IAAMC,WCJxB,SAASqB,EAAarE,GAC3B,IAAIsE,EACAC,EAUJ,OARIvE,EAAMsC,WACRgC,EAAmB,iDACnBC,EAAqB,oCAErBD,EAAmB,gCACnBC,EAAqB,oDAIrB,yBAAKtE,UAAU,iBACb,4BACEA,UAAU,+BACVI,QAASL,EAAMwE,gBAEjB,4BACE1E,MAAOE,EAAMF,MACbM,SAAUJ,EAAMyE,aAChBxE,UAAU,gCAEV,4BAAQA,UAAU,iBAAiBH,MAAM,MAAzC,MACA,4BAAQG,UAAU,iBAAiBH,MAAM,MAAzC,OAEF,4BACEG,UAAWsE,EACXlE,QAASL,EAAM0E,kBAFjB,UAOA,4BACEzE,UAAWqE,EACXjE,QAASL,EAAM2E,gBAFjB,W,ICsHSC,E,YAjJb,WAAY5E,GAAQ,IAAD,8BACjB,4CAAMA,KASR6E,eAAiB,SAACvE,GAChB,EAAKN,MAAM8E,mBAAmBxE,EAAMyE,OAAOjF,QAX1B,EAcnB2E,aAAe,SAACnE,GACd,EAAKN,MAAMgF,WAAW1E,EAAMyE,OAAOjF,OACnCmF,aAAaC,QAAQ,OAAQ5E,EAAMyE,OAAOjF,QAd1C,EAAK+E,eAAiB,EAAKA,eAAeM,KAApB,gBACtB,EAAKR,eAAiB,EAAKA,eAAeQ,KAApB,gBACtB,EAAKT,iBAAmB,EAAKA,iBAAiBS,KAAtB,gBACxB,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAK9E,QAAU,EAAKA,QAAQ8E,KAAb,gBACf,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAPJ,E,8EAoBjB9D,KAAKrB,MAAMqF,kBAAiB,GAC5BJ,aAAaC,QAAQ,aAAa,K,yCAIlC7D,KAAKrB,MAAMqF,kBAAiB,GAC5BJ,aAAaC,QAAQ,aAAa,K,gCAGzB,IAAD,EAC2D7D,KAAKrB,MAAhEsF,EADA,EACAA,WAAYC,EADZ,EACYA,OAAQC,EADpB,EACoBA,qBAAsBC,EAD1C,EAC0CA,aAClDpE,KAAKrB,MAAM0F,mBAAX,UAAiCJ,EAAjC,aAAgDC,EAAhD,aAA2DC,IAC3DnE,KAAKrB,MAAM2F,iBAAiBF,GAC5BR,aAAaC,QAAQ,eAAgBO,K,sCAGtB,IAAD,EACuCpE,KAAKrB,MAAlDsF,EADM,EACNA,WAAYC,EADN,EACMA,OAAQC,EADd,EACcA,qBAC5BnE,KAAKrB,MAAM0F,mBAAX,UAAiCJ,EAAjC,aAAgDC,EAAhD,aAA2DC,M,2CAI3DI,SAASC,KAAKjC,MAAMkC,gBAApB,eAA8CzE,KAAKrB,MAAM8F,gBAAzD,Q,0CAGmB,IAAD,SACiDzE,KAAKrB,MAAhEsF,EADU,EACVA,WAAYC,EADF,EACEA,OAAQC,EADV,EACUA,qBAAsBC,EADhC,EACgCA,aAElDpE,KAAKrB,MAAM0F,mBAAX,UAAiCJ,EAAjC,aAAgDC,EAAhD,aAA2DC,IAE3B,KAA5BnE,KAAKrB,MAAMyF,aACbM,UAAUC,YAAYC,oBACnB,SAAAC,GAAQ,EAAKlG,MAAMmG,kBAAkBD,EAAIE,OAAOC,SAAUH,EAAIE,OAAOE,aACtEjF,KAAKrB,MAAMmG,mBAGb9E,KAAKrB,MAAM2F,iBAAiBF,K,+BAItB,IAAD,EAIFpE,KAAKrB,MAFRtE,EAFK,EAELA,QAASwH,EAFJ,EAEIA,SAAUtD,EAFd,EAEcA,KAAM0C,EAFpB,EAEoBA,UAAWmD,EAF/B,EAE+BA,aACpCc,EAHK,EAGLA,iBAAkBC,EAHb,EAGaA,kBAAmBC,EAHhC,EAGgCA,yBAEvC,OAAIF,GAAoBC,GAAqBC,EACpC,yBAAKxG,UAAU,kBAEnBvE,EAAQ6G,KAwBX,yBAAKtC,UAAU,WACb,4BAAQA,UAAU,UAChB,kBAACoE,EAAD,CACEvE,MAAUF,EACV0C,UAAcA,EACdkC,cAAkBnD,KAAK+D,cACvBV,iBAAoBrD,KAAKqD,iBACzBC,eAAmBtD,KAAKsD,eACxBF,aAAiBpD,KAAKoD,eAExB,kBAAC1E,EAAD,CACEH,KAASA,EACTE,MAAU2F,EACVrF,SAAaiB,KAAKwD,eAClBxE,QAAYgB,KAAKhB,WAGrB,0BAAMJ,UAAU,QACd,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEL,KAASA,EACT0C,UAAcA,EACd5G,QAAYA,IAEd,yBAAKuE,UAAU,oBACZiD,GAAY,kBAACD,EAAD,CACXrD,KAASA,EACT0C,UAAcA,EACdY,SAAaA,EAAS,KAEvBA,GAAY,kBAACD,EAAD,CACXrD,KAASA,EACT0C,UAAcA,EACdY,SAAaA,EAAS,KAEvBA,GAAY,kBAACD,EAAD,CACXrD,KAASA,EACT0C,UAAcA,EACdY,SAAaA,EAAS,OAI5B,kBAAC,EAAD,CACEtD,KAASA,EACTL,IAAQ7D,EAAQ6G,KAAKmE,MAAMnH,IAC3BC,IAAQ9D,EAAQ6G,KAAKmE,MAAMlH,QAnE/B,yBAAKS,UAAU,WACb,4BAAQA,UAAU,UAChB,kBAACoE,EAAD,CACEvE,MAAUF,EACV0C,UAAcA,EACdkC,cAAkBnD,KAAK+D,cACvBV,iBAAoBrD,KAAKqD,iBACzBC,eAAmBtD,KAAKsD,eACxBF,aAAiBpD,KAAKoD,eAExB,kBAAC1E,EAAD,CACEH,KAASA,EACTE,MAAU2F,EACVrF,SAAaiB,KAAKwD,eAClBxE,QAAYgB,KAAKhB,gB,GArFZ0C,IAAMC,W,yBCKZ2D,EAA4B,SAACC,GAAD,MAAW,CAClD1G,KAX0C,+BAY1C2G,QAASD,IAQEE,EAA6B,SAACF,GAAD,MAAW,CACnD1G,KAnB2C,gCAoB3C2G,QAASD,IAGEG,EAAqB,SAACxE,GAAD,OAAU,SAACyE,GAC3CA,EAASL,GAA0B,IACnCM,MAAM,GAAD,OAvBW,4CAuBX,OAtBU,WAsBV,YArBS,yCAqBT,YApBO,eAoBP,YAnBI,OAmBJ,OAAqD1E,IACvD2E,MAAK,SAACC,GACL,IAAKA,EAASC,GAEZ,MADAJ,EAASL,GAA0B,IAC7BU,MAAMF,EAASG,YAGvB,OADAN,EAASL,GAA0B,IAC5BQ,KAERD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACM,GACLR,EAASF,GAA2B,IAEpCE,EAzB8C,CAClD9G,KAf0C,+BAgB1C2G,QA4BF,SAAyBW,GAGvB,IAFA,IAAMC,EAAS,GADe,WAGrBC,GACP,IAAMjG,EAAM,IAAIP,KAChBO,EAAIkG,QAAQlG,EAAImG,UAAYF,EAAI,GAChC,IAAMG,EAAQ,UAAMpG,EAAIqG,cAAV,YAA2BlH,EAAQa,EAAIsG,WAAa,GAApD,YAA0DnH,EAAQa,EAAImG,YACpFH,EAAOC,GAAK,CACVvE,QAAS1B,EAAIuG,SACbvH,KAAMC,KAAKC,MAAM6G,EAAMS,KAAKC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAOC,SAASR,MAC/DS,QAAO,SAACC,EAAKJ,GAAN,OAAeI,EAAMJ,EAAKK,KAAK/H,OAAM,GARvB,GASxBkC,KAAM6E,EAAMS,KAAKC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAOC,SAAZ,UAAwBR,EAAxB,iBAA8C,GAAGnM,QAAQ,GAAGiH,OARzF+E,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAI,EAAvBA,GAWT,OAAOD,EAnBgCgB,CAAgBjB,QAEpDkB,OAAM,kBAAM1B,EAASF,GAA2B,SC3C9C,IAYM6B,EAAkB,SAAC/B,GAAD,MAAW,CACxC1G,KAboC,yBAcpC2G,QAASD,IAQEgC,EAAmB,SAAChC,GAAD,MAAW,CACzC1G,KArBqC,0BAsBrC2G,QAASD,IAQEiC,EAA0B,SAACnN,GAAD,MAAc,CACnDwE,KA7BwC,6BA8BxC2G,QAASnL,ICnCX,IAuPeoN,EAvPG,CAChBC,GAAI,aACJC,GAAI,UACJC,GAAI,eACJC,GAAI,WACJC,GAAI,yBACJC,GAAI,WACJC,GAAI,oBACJC,GAAI,mBACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,QACJC,GAAI,SACJC,GAAI,UACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,QACJC,GAAI,oCACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,aACJC,GAAI,UACJC,GAAI,eACJC,GAAI,aACJC,GAAI,UACJC,GAAI,UACJC,GAAI,gBACJC,GAAI,OACJC,GAAI,YACJC,GAAI,+CACJC,GAAI,SACJC,GAAI,oBACJC,GAAI,aACJC,GAAI,QACJC,GAAI,SACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,UACJC,GAAI,UACJC,GAAI,iBACJC,GAAI,QACJC,GAAI,cACJC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,QACJC,GAAI,UACJC,GAAI,YACJC,GAAI,WACJC,GAAI,oCACJC,GAAI,YACJC,GAAI,cACJC,GAAI,wBACJC,GAAI,QACJC,GAAI,WACJC,GAAI,yBACJC,GAAI,WACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,SACJC,GAAI,4BACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,UACJC,GAAI,QACJC,GAAI,eACJC,GAAI,UACJC,GAAI,QACJC,GAAI,UACJC,GAAI,kBACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,eACJC,GAAI,QACJC,GAAI,UACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,eACJC,GAAI,UACJC,GAAI,SACJC,GAAI,aACJC,GAAI,UACJC,GAAI,OACJC,GAAI,QACJC,GAAI,WACJC,GAAI,mBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,QACJC,GAAI,SACJC,GAAI,WACJC,GAAI,aACJC,GAAI,2BACJC,GAAI,aACJC,GAAI,aACJC,GAAI,cACJC,GAAI,SACJC,GAAI,WACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,iCACJC,GAAI,eACJC,GAAI,UACJC,GAAI,OACJC,GAAI,mBACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,cACJC,GAAI,SACJC,GAAI,UACJC,GAAI,UACJC,GAAI,gBACJC,GAAI,QACJC,GAAI,iBACJC,GAAI,UACJC,GAAI,cACJC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,eACJC,GAAI,SACJC,GAAI,cACJC,GAAI,cACJC,GAAI,WACJC,GAAI,QACJC,GAAI,WACJC,GAAI,QACJC,GAAI,gBACJC,GAAI,SACJC,GAAI,wBACJC,GAAI,2BACJC,GAAI,mCACJC,GAAI,iBACJC,GAAI,SACJC,GAAI,mBACJC,GAAI,aACJC,GAAI,UACJC,GAAI,aACJC,GAAI,OACJC,GAAI,YACJC,GAAI,QACJC,GAAI,eACJC,GAAI,aACJC,GAAI,QACJC,GAAI,cACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,wBACJC,GAAI,UACJC,GAAI,WACJC,GAAI,cACJC,GAAI,SACJC,GAAI,UACJC,GAAI,aACJC,GAAI,eACJC,GAAI,aACJC,GAAI,aACJC,GAAI,iBACJC,GAAI,YACJC,GAAI,SACJC,GAAI,QACJC,GAAI,qBACJC,GAAI,WACJC,GAAI,WACJC,GAAI,UACJC,GAAI,yBACJC,GAAI,UACJC,GAAI,QACJC,GAAI,UACJC,GAAI,gBACJC,GAAI,UACJC,GAAI,UACJC,GAAI,uCACJC,GAAI,UACJC,GAAI,cACJC,GAAI,OACJC,GAAI,SACJC,GAAI,SACJC,GAAI,sBACJC,GAAI,SACJC,GAAI,YACJC,GAAI,gBACJC,GAAI,SACJC,GAAI,QACJC,GAAI,YACJC,GAAI,aACJC,GAAI,UACJC,GAAI,UACJC,GAAI,WACJC,GAAI,8BACJC,GAAI,OACJC,GAAI,OACJC,GAAI,2BACJC,GAAI,QACJC,GAAI,UACJC,GAAI,mCACJC,GAAI,uBACJC,GAAI,UACJC,GAAI,sBACJC,GAAI,cACJC,GAAI,WACJC,GAAI,sBACJC,GAAI,UACJC,GAAI,OACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,aACJC,GAAI,iBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,UACJC,GAAI,QACJC,GAAI,QACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,QACJC,GAAI,cCrOOC,EAAoB,SAACvR,GAAD,MAAW,CAC1C1G,KAXiC,sBAYjC2G,QAASD,IAGEwR,EAAoB,SAACjQ,GAAD,MAAW,CAC1CjI,KAfiC,sBAgBjC2G,QAASsB,IAGEkQ,EAAqB,SAACzR,GAAD,MAAW,CAC3C1G,KAnBkC,uBAoBlC2G,QAASD,IAwDX,SAAS0R,EAAenQ,GA2BtB,MA1Be,CACbtF,GAAIsF,EAAKtF,GACT5B,KAAMkH,EAAKoQ,GACXjX,SAAU6G,EAAK7G,SACfiB,KAAM,CACJC,KAAM2F,EAAK3F,KACXC,QAASqG,EAAUX,EAAKqQ,IAAI/V,SAC5BiE,MAAO,CACLnH,IAAK4I,EAAKzB,MAAMnH,IAChBC,IAAK2I,EAAKzB,MAAMlH,MAGpB9D,QAAS,CACPmH,GAAIsF,EAAKzM,QAAQ,GAAGmH,GACpBpC,KAAMC,KAAKC,MAAMwH,EAAKK,KAAK/H,MAC3BtB,MAAOuB,KAAKC,MAAM,MAAQ,MACtBD,KAAKC,MAAMwH,EAAKK,KAAK/H,MAAQ,eAAS0H,EAAK/I,KAAK0D,MAAS,KAAQ,MACjEpC,KAAKC,MAAMwH,EAAKK,KAAK/H,MAD4C,SACnC0H,EAAK/I,KAAK0D,MAAS,MACrDzD,SAAU8I,EAAKK,KAAKnJ,SACpBsD,KAAMwF,EAAKzM,QAAQ,GAAGiH,KACtBvD,KAAM,CACJqZ,IAAKtQ,EAAK/I,KAAKqZ,IACf3V,MAAOqF,EAAK/I,KAAK0D,S,SAOV4V,I,2EAAf,kCAAAC,EAAA,4DACe,qBACD,uBAFd,SAGyB1R,MAAM,GAAD,OAFf,qBAEe,YADhB,yBAFd,WAGQE,EAHR,QAKgBC,GALhB,sBAMU,IAAIC,MAAJ,4CAA+CF,EAASyR,SANlE,uBASuBzR,EAASI,OAThC,cASQnB,EATR,OAUQyS,EAAczS,EAAO0S,IACrBC,EAAaF,EAAYG,QAAQ,KAXzC,kBAaS,CACLzZ,IAAKsZ,EAAYI,MAAM,EAAGF,GAC1BvZ,IAAKqZ,EAAYI,MAAMF,EAAa,KAfxC,6C,sBCjFA,IAUeG,eAnCf,SAAyBnY,GAAQ,IAAD,EACwBA,EAAMrF,QAApDA,EADsB,EACtBA,QAAS6K,EADa,EACbA,iBAAkB4S,EADL,EACKA,eADL,EAE2BpY,EAAMmC,SAAvDA,EAFsB,EAEtBA,SAAUsD,EAFY,EAEZA,kBAAmB4S,EAFP,EAEOA,gBAFP,EAGYrY,EAAMsY,aAAxCzZ,EAHsB,EAGtBA,KAAM0C,EAHgB,EAGhBA,UAAWmD,EAHK,EAGLA,aAHK,EAM1B1E,EAAM+E,gBADRA,EAL4B,EAK5BA,gBAAiBR,EALW,EAKXA,WAAYC,EALD,EAKCA,OAAQC,EALT,EAKSA,qBAEvC,MAAO,CACLe,mBACAC,oBACAC,yBAV4B,EAK+BA,yBAM3DhB,eACA/J,UACAyd,iBACAC,kBACAlW,WACAtD,OACA0C,YACAwD,kBACAR,aACAC,SACAC,2BAIuB,SAACwB,GAAD,MAAe,CACxCrB,iBAAkB,SAACpD,GAAD,OAAUyE,EDHE,SAACzE,GAAD,OAAU,SAACyE,GACzCA,EAASmR,GAAkB,IAE3BlR,MAAM,GAAD,OAxBW,4CAwBX,OAvBS,UAuBT,YAtBS,yCAsBT,YArBO,eAqBP,YApBa,MAoBb,OAA6D1E,IAC/D2E,MAAK,SAACC,GACL,IAAKA,EAASC,GAEZ,MADAJ,EAASmR,GAAkB,IACrB9Q,MAAMF,EAASG,YAGvB,OADAN,EAASmR,GAAkB,IACpBhR,KAERD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACiB,GACLnB,EAASD,EAAmBoB,EAAKtF,KACjCmE,EAAS6B,EAAwBV,EAAKzM,QAAQ,GAAG8M,OACjDxB,EAASqR,GAAmB,IAC5BrR,EAASoR,EAAkBE,EAAenQ,QAG3CO,OAAM,kBAAM1B,EAASqR,GAAmB,QCjBN1S,CAAiBpD,KACtD4D,kBAAmB,SAAC5G,EAAKC,GAAN,OAAcwH,EDmBF,SAACzH,EAAKC,GAAN,8CAAc,WAAOwH,GAAP,eAAA2R,EAAA,yDAC7C3R,EAASmR,GAAkB,IAEvBzR,EAAQ,CACVnH,MACAC,OAGGA,EARwC,gCAS7BkZ,IAT6B,OAS3ChS,EAT2C,cAY7CO,MAAM,GAAD,OAxDW,4CAwDX,OAvDS,UAuDT,YAtDS,yCAsDT,YArDO,eAqDP,gBAAmDP,EAAMnH,IAAzD,gBAAoEmH,EAAMlH,MAC5E0H,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAGvB,OADAN,EAASmR,GAAkB,IACpBhR,KAERD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACiB,GACLnB,EAASD,EAAmBoB,EAAKtF,KACjCmE,EAAS6B,EAAwBV,EAAKzM,QAAQ,GAAG8M,OACjDxB,EAASqR,GAAmB,IAC5BrR,EAASoR,EAAkBE,EAAenQ,QAE3CO,OAAM,kBAAM1B,EAASqR,GAAmB,OA3BE,2CAAd,sDCnBWlS,CAAkB5G,EAAKC,KACjEuH,mBAAoB,SAACxE,GAAD,OAAUyE,EAASD,EAAmBxE,KAC1DyC,WAAY,SAACpF,GAAD,OAAUoH,EChCE,SAACpH,GAAD,MAAW,CACnCM,KALyB,cAMzB2G,QAASjH,GD8BsBoF,CAAWpF,KAC1CyF,iBAAkB,SAAC/C,GAAD,OAAe0E,EC5BH,SAAC1E,GAAD,MAAgB,CAC9CpC,KATgC,cAUhC2G,QAASvE,GD0BiC+C,CAAiB/C,KAC3DwC,mBAAoB,SAACW,GAAD,OAAkBuB,ECxBN,SAACvB,GAAD,MAAmB,CACnDvF,KAbkC,uBAclC2G,QAASpB,GDsBsCX,CAAmBW,KAClEC,mBAAoB,SAACD,GAAD,OAAkBuB,EHDN,SAACvB,GAAD,OAAkB,SAACuB,GACnDA,EAAS2B,GAAgB,IACzB,IAAMrJ,EAAM,gBAAYmG,GACxBwB,MAAM,GAAD,OAlCW,uCAkCX,YA9BS,2CA8BT,YAjCQ,8BAiCR,YAhCQ,+BAgCR,YA/Ba,SA+Bb,OAA8D3H,IAChE4H,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAGvB,OADAN,EAAS2B,GAAgB,IAClBxB,KAERD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACiB,GACL,IAAMmR,EAAW5Y,KAAKC,MAAMD,KAAK6Y,SAAWpR,EAAKqR,OAAOC,MAAMC,QAC9D1S,EAAS4B,GAAiB,IAC1B5B,EAnCyB,SAACmB,GAAD,MAAW,CACxCjI,KAjBoC,yBAkBpC2G,QAASsB,GAiCIwR,CAKf,SAAoBxR,GAClB,MAAM,eAAN,OAAsBA,EAAKyR,KAA3B,6BAAoDzR,EAAK0R,OAAzD,YAAmE1R,EAAKtF,GAAxE,YAA8EsF,EAAK2R,OAAnF,UAN6BC,CAAW5R,EAAKqR,OAAOC,MAAMH,SAEvD5Q,OAAM,kBAAM1B,EAAS4B,GAAiB,QGhBMlD,CAAmBD,QAGrDyT,CAA6CtU,G,+kBEpC5D,IAAMoV,EAAY,CAChBte,QAAS,GACT6K,kBAAkB,EAClB4S,gBAAgB,G,yjBCHlB,IAAMa,EAAY,CAChB9W,SAAU,GACVsD,mBAAmB,EACnB4S,iBAAiB,G,yjBCHnB,IAAMY,GAAY,CAChBpa,KAAMqF,aAAagV,QAAQ,QAAUhV,aAAagV,QAAQ,QAAU,KACpE3X,UAAW2C,aAAagV,QAAQ,aAAehV,aAAagV,QAAQ,aAAe,OACnFxU,aAAc,I,6jBCDhB,IAAMuU,GAAY,CAChBlU,gBAAiB,GACjBR,WfNK,WACL,IAAM4U,GAAQ,IAAIhZ,MAAOiZ,WAEzB,OAAID,EAAQ,GAAKA,EAAQ,EAAY,UACjCA,GAAS,GAAKA,EAAQ,GAAa,UACnCA,GAAS,IAAMA,EAAQ,GAAa,OACpCA,GAAS,IAAMA,EAAQ,GAAa,YACpCA,GAAS,IAAMA,EAAQ,GAAa,UAEjC,QeHKE,GACZ7U,OfKK,WACL,IAAM5D,GAAQ,IAAIT,MAAO6G,WAEzB,OAAIpG,GAAS,GAAKA,GAAS,EAAY,SACnCA,GAAS,GAAKA,GAAS,EAAY,SACnCA,GAAS,GAAKA,GAAS,GAAa,SAEjC,SeZC0Y,GACR7U,qBAAsB,GACtBiB,0BAA0B,EAC1B6T,wBAAwB,GCRXC,eAAgB,CAC7B7e,QJKa,WAAsC,IAA5BqF,EAA2B,uDAAnBiZ,EAAWQ,EAAQ,uCAClD,OAAQA,EAAOta,MACb,IHT+B,sBGU7B,OAAO,EAAP,GACKa,EADL,CAEEwF,iBAAkBiU,EAAO3T,UAG7B,IHbgC,uBGc9B,OAAO,EAAP,GACK9F,EADL,CAEEoY,eAAgBqB,EAAO3T,UAG3B,IHpB+B,sBGqB7B,OAAO,EAAP,GACK9F,EADL,CAEErF,QAAS8e,EAAO3T,UAKtB,OAAO9F,GI1BPmC,SHIa,WAAsC,IAA5BnC,EAA2B,uDAAnBiZ,EAAWQ,EAAQ,uCAClD,OAAQA,EAAOta,MACb,IPZwC,+BOatC,OAAO,KACFa,EADL,CAEEyF,kBAAmBgU,EAAO3T,UAG9B,IPhByC,gCOiBvC,OAAO,KACF9F,EADL,CAEEqY,gBAAiBoB,EAAO3T,UAG5B,IPvBwC,+BOwBtC,OAAO,KACF9F,EADL,CAEEmC,SAAUsX,EAAO3T,UAKvB,OAAO9F,GGzBPsY,aFGa,WAAsC,IAA5BtY,EAA2B,uDAAnBiZ,GAAWQ,EAAQ,uCAClD,OAAQA,EAAOta,MACb,IHduB,cGerB,OAAO,KACFa,EADL,CAEEnB,KAAM4a,EAAO3T,UAGjB,IHnB8B,cGoB5B,OAAO,KACF9F,EADL,CAEEuB,UAAWkY,EAAO3T,UAGtB,IHxBgC,uBGyB9B,OAAO,KACF9F,EADL,CAEE0E,aAAc+U,EAAO3T,UAK3B,OAAO9F,GExBP+E,gBDOa,WAAsC,IAA5B/E,EAA2B,uDAAnBiZ,GAAWQ,EAAQ,uCAClD,OAAQA,EAAOta,MACb,IRlBkC,yBQmBhC,OAAO,MACFa,EADL,CAEE0F,yBAA0B+T,EAAO3T,UAGrC,IRvBkC,yBQwBhC,OAAO,MACF9F,EADL,CAEE+E,gBAAiB0U,EAAO3T,UAG5B,IR5BmC,0BQ6BjC,OAAO,MACF9F,EADL,CAEEuZ,uBAAwBE,EAAO3T,UAGnC,IRhCsC,6BQiCpC,OAAO,MACF9F,EADL,CAEEyE,qBAAsBgV,EAAO3T,UAKnC,OAAO9F,K,UEpCH0Z,GCLS,WAA4C,IAApBC,EAAmB,uDAAJ,GACpD,OAAOC,YACLC,GACAF,EACAG,YAAgBC,MDCNC,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAAC,EAAD,OAEF7U,SAASsV,eAAe,SpBkHpB,kBAAmBnV,WACrBA,UAAUoV,cAAcC,MAAMlU,MAAK,SAACmU,GAClCA,EAAaC,kB","file":"static/js/main.270b6140.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const word = {\n  en: {\n    fullDayName: {\n      0: 'Sunday', 1: 'Monday', 2: 'Tuesday', 3: 'Wednesday', 4: 'Thursday', 5: 'Friday', 6: 'Saturday',\n    },\n    shortDayName: {\n      0: 'Sun', 1: 'Mon', 2: 'Tue', 3: 'Wed', 4: 'Thu', 5: 'Fri', 6: 'Sat',\n    },\n    fullMonthName: {\n      0: 'January',\n      1: 'February',\n      2: 'March',\n      3: 'April',\n      4: 'May',\n      5: 'June',\n      6: 'July',\n      7: 'August',\n      8: 'September',\n      9: 'October',\n      10: 'November',\n      11: 'December',\n    },\n    weather: {\n      200: 'Thunderstorm with light rain',\n      201: 'Thunderstorm with rain',\n      202: 'Thunderstorm with heavy rain',\n      210: 'Light thunderstorm',\n      211: 'Thunderstorm',\n      212: 'Heavy thunderstorm',\n      221: 'Ragged thunderstorm',\n      230: 'Thunderstorm with light drizzle',\n      231: 'Thunderstorm with drizzle',\n      232: 'Thunderstorm with heavy drizzle',\n      300: 'Light intensity drizzle',\n      301: 'Drizzle',\n      302: 'Heavy intensity drizzle',\n      310: 'Light intensity drizzle rain',\n      311: 'Drizzle rain',\n      312: 'Heavy intensity drizzle rain',\n      313: 'Shower rain and drizzle',\n      314: 'Heavy shower rain and drizzle',\n      321: 'Shower drizzle',\n      500: 'Light rain',\n      501: 'Moderate rain',\n      502: 'Heavy intensity rain',\n      503: 'Very heavy rain',\n      504: 'Extreme rain',\n      511: 'Freezing rain',\n      520: 'Light intensity shower rain',\n      521: 'Shower rain',\n      522: 'Heavy intensity shower rain',\n      531: 'Ragged shower rain',\n      600: 'Light snow',\n      601: 'Snow',\n      602: 'Heavy snow',\n      611: 'Sleet',\n      612: 'Light shower sleet',\n      613: 'Shower sleet',\n      615: 'Light rain and snow',\n      616: 'Rain and snow',\n      620: 'Light shower snow',\n      621: 'Shower snow',\n      622: 'Heavy shower snow',\n      701: 'Mist',\n      711: 'Smoke',\n      721: 'Haze',\n      731: 'Sand / dust whirls',\n      741: 'Fog',\n      751: 'Sand',\n      761: 'Dust',\n      762: 'Volcanic ash',\n      771: 'Squalls',\n      781: 'Tornado',\n      800: 'Clear sky',\n      801: 'Few clouds',\n      802: 'Scattered clouds',\n      803: 'Broken clouds',\n      804: 'Overcast clouds',\n    },\n    words: {\n      feels: 'Feels', wind: 'Wind', humidity: 'Humidity', search: 'Search', lat: 'Latitude', lon: 'Longtitude', searchPlaceholder: 'Enter city name',\n    },\n  },\n  ru: {\n    fullDayName: {\n      0: 'Воскресенье', 1: 'Понедельник', 2: 'Вторник', 3: 'Среда', 4: 'Четверг', 5: 'Пятница', 6: 'Суббота',\n    },\n    shortDayName: {\n      0: 'Вс', 1: 'Пн', 2: 'Вт', 3: 'Ср', 4: 'Чт', 5: 'Пт', 6: 'Сб',\n    },\n    fullMonthName: {\n      0: 'Января',\n      1: 'Февраля',\n      2: 'Марта',\n      3: 'Апреля',\n      4: 'Мая',\n      5: 'Июня',\n      6: 'Июля',\n      7: 'Августа',\n      8: 'Сентяря',\n      9: 'Октября',\n      10: 'Ноября',\n      11: 'Декабря',\n    },\n    weather: {\n      200: 'Гроза с небольшим дождем',\n      201: 'Гроза с дождем',\n      202: 'Гроза с сильным дождем',\n      210: 'Легкая гроза',\n      211: 'Гроза',\n      212: 'Сильная гроза',\n      221: 'Рваная гроза',\n      230: 'Гроза с моросящим дождем',\n      231: 'Гроза с моросящим дождем',\n      232: 'Гроза с сильным моросящим дождем',\n      300: 'Моросящий дождь',\n      301: 'Морось',\n      302: 'Моросящий дождь',\n      310: 'Моросящий дождь',\n      311: 'Моросящий дождь',\n      312: 'Моросящий дождь сильной интенсивности',\n      313: 'Дождь и дождь под дождем',\n      314: 'Сильный дождь и дождь',\n      321: 'Дождь',\n      500: 'Слабый дождь',\n      501: 'Умеренный дождь',\n      502: 'Сильный дождь',\n      503: 'Сильный дождь',\n      504: 'Сильный дождь',\n      511: 'Ледяной дождь',\n      520: 'Сильный дождь под дождем',\n      521: 'Сильный дождь',\n      522: 'Сильный дождь под дождем',\n      531: 'Сильный дождь под дождем',\n      600: 'Слабый снег',\n      601: 'Снег',\n      602: 'Сильный снегопад',\n      611: 'Мокрый снег',\n      612: 'Слабый дождь со снегом',\n      613: 'Мокрый душ',\n      615: 'Небольшой дождь и снег',\n      616: 'Дождь и снег',\n      620: 'Легкий снегопад',\n      621: 'Снег под дождем',\n      622: 'Снег под сильным дождем',\n      701: 'Туман',\n      711: 'Дым',\n      721: 'Дымка',\n      731: 'Песчано-пылевые вихри',\n      741: 'Туман',\n      751: 'Песок',\n      761: 'Пыль',\n      762: 'Вулканический пепел',\n      771: 'Шквал',\n      781: 'Торнадо',\n      800: 'Чистое небо',\n      801: 'Немного облаков',\n      802: 'Рассеянные облака',\n      803: 'Рассеянные облака',\n      804: 'Пасмурные облака',\n    },\n    words: {\n      feels: 'Ощущается', wind: 'Ветер', humidity: 'Влажность', search: 'Поиск', lat: 'Широта', lon: 'Долгота', searchPlaceholder: 'Введите название города',\n    },\n  },\n};\n\nexport default function translite(lang, key, value) {\n  return word[lang][key][value];\n}\n","import React from 'react';\nimport translite from '../../utils/translite';\n\nexport default function Search(props) {\n  return (\n    <div className=\"search\">\n      <form className=\"search__form\">\n        <input\n          className=\"search__input\"\n          type=\"text\"\n          placeholder={translite(props.lang, 'words', 'searchPlaceholder')}\n          onChange={props.onChange}\n          value={props.value}\n        />\n        <button\n          className=\"button search__button\"\n          onClick={(event) => {\n            props.onClick();\n            event.preventDefault();\n          }}\n        >{ translite(props.lang, 'words', 'search') }\n        </button>\n      </form>\n    </div>\n  );\n}\n","export function celsiusToFaringate(temp) {\n  return Math.round(temp * (9 / 5) + 32);\n}\n\nexport function getTimesOfDay() {\n  const hours = new Date().getHours();\n\n  if (hours > 4 && hours < 8) { return 'sunrise'; }\n  if (hours >= 8 && hours < 11) { return 'morning'; }\n  if (hours >= 11 && hours < 13) { return 'noon'; }\n  if (hours >= 13 && hours < 16) { return 'afternoon'; }\n  if (hours >= 16 && hours < 22) { return 'evening'; }\n\n  return 'night';\n}\n\nexport function getCurrentSeason() {\n  const month = new Date().getMonth();\n\n  if (month >= 2 && month <= 4) { return 'spring'; }\n  if (month >= 5 && month <= 7) { return 'summer'; }\n  if (month >= 8 && month <= 10) { return 'autumn'; }\n\n  return 'winter';\n}\n\nexport function addSero(n) {\n  return n < 10 ? `0${n}` : n;\n}\n","import React from 'react';\nimport translite from '../../utils/translite';\nimport { celsiusToFaringate, addSero } from '../../utils/service';\n\nexport default class WeatherDay extends React.Component {\n  state = {\n    currentDateTime: '',\n  }\n\n  getCurrentDateTime() {\n    let date = new Date();\n    date.setUTCSeconds(date.getUTCSeconds()+this.props.weather.timezone);\n    const dayName = translite(this.props.lang, 'shortDayName',date.getUTCDay());\n    const day = date.getUTCDate()\n    const month = translite(this.props.lang,'fullMonthName',date.getUTCMonth());\n    const hour = addSero(date.getUTCHours());\n    const min = addSero(date.getUTCMinutes());\n    this.setState( {currentDateTime:`${dayName} ${day} ${month}  ${hour}:${min}` });\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getCurrentDateTime(), 10);\n  }\n\n  componentWillUnmount() {\n   clearInterval(this.timerID);\n  }\n\n  render() {\n    const { weather, isCelsius } = this.props;\n    const temp = isCelsius ? weather.weather.temp : celsiusToFaringate(weather.weather.temp);\n    const feels = isCelsius ? weather.weather.feels : celsiusToFaringate(weather.weather.feels);\n    return (\n      <div className=\"weather-day\">\n        <div className=\"weather-day__city\">{ weather.city.name }, { weather.city.country }</div>\n        <div className=\"weather-day__date-time\">{ this.state.currentDateTime }</div>\n        <div className=\"weather-day__wrapper\">\n          <div className=\"weather-day__temp\">\n            <div className=\"weather-day__temp-value\">{ temp }</div>\n            <div className=\"weather-day__temp-deg\">&deg;</div>\n          </div>\n          <div className=\"weather-day__img\">\n            <img src={`./images/${weather.weather.icon}.png`} alt=''/>\n          </div>\n          <ul className=\"weather-day__more\">\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'weather', weather.weather.id) }</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'feels') }: { feels } &deg;</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'wind') }: { weather.weather.wind.speed } m/c</li>\n            <li className=\"weather-day__more-item\">{ translite(this.props.lang,'words', 'humidity') }: { weather.weather.humidity } %</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { celsiusToFaringate } from '../../utils/service';\nimport translite from '../../utils/translite';\n\nexport default function WeatherForecastDay(props) {\n  const { lang, forecast, isCelsius } = props;\n  const temp = isCelsius ? forecast.temp : celsiusToFaringate(forecast.temp);\n  return (\n    <div className=\"weather-forecast__day\">\n      <div className=\"weather-forecast__weekday\">{ translite(lang, 'fullDayName', forecast.weekDay) }</div>\n      <div className=\"weather-forecast__temp\">{ temp }&deg;</div>\n      <div className=\"weather-forecast__img\">\n        <img src={`./images/${forecast.icon}.png`} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport translite from '../../utils/translite';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoieXVza292c3MiLCJhIjoiY2szNnRoODJuMDR2NTNubWhmZ2tyNHcweiJ9.nqpNmNuvXFtwx0VFoqqxGQ';\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoom: 20,\n    };\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      center: [this.props.lon, this.props.lat],\n      style: 'mapbox://styles/mapbox/streets-v9',\n      zoom: 10,\n    });\n  }\n\n  componentDidUpdate() {\n    this.map.setCenter([this.props.lon, this.props.lat]);\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  render() {\n    const style = {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n    };\n\n    const lat = (`${this.props.lat}`).split('.');\n    const lon = (`${this.props.lon}`).split('.');\n\n    return (\n      <div className=\"geoposition\">\n        <div className=\"mapContainer\">\n          <div style={style} ref={(el) => this.mapContainer = el} className=\"map\" />\n        </div>\n        <p>\n{translite(this.props.lang,'words', 'lat')}\n:\n{' '}\n{ lat[0] }\n&deg;\n{ lat[1] }\n'\n</p>\n        <p>\n{translite(this.props.lang,'words', 'lon')}\n:\n{' '}\n{ lon[0] }\n&deg;\n{ lon[1] }\n'\n</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport function ControlPanel(props) {\n  let classNameCelsius;\n  let classNameFaringate;\n\n  if (props.isCelsius) {\n    classNameCelsius = 'button button--selected control-panel__celsius';\n    classNameFaringate = 'button control-panel__faringate';\n  } else {\n    classNameCelsius = 'button control-panel__celsius';\n    classNameFaringate = 'button button--selected control-panel__faringate';\n  }\n\n  return (\n    <div className=\"control-panel\">\n      <button\n        className=\"button control-panel__update\"\n        onClick={props.onClickUpdate}\n      />\n      <select\n        value={props.value}\n        onChange={props.onChangeLang}\n        className=\"dropdown control-panel__lang\"\n      >\n        <option className=\"dropdown__item\" value=\"en\">en</option>\n        <option className=\"dropdown__item\" value=\"ru\">ru</option>\n      </select>\n      <button\n        className={classNameFaringate}\n        onClick={props.onClickFaringate}\n      >\n&deg; F\n\n      </button>\n      <button\n        className={classNameCelsius}\n        onClick={props.onClickCelsius}\n      >\n&deg; C\n\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport Search from '../search/cmp-search';\nimport WeatherDay from '../weatherDay/cmp-weatherDay';\nimport WeatherForecastDay from '../weatherForecastDay/cmp-weatherForecastDay';\nimport { Map} from '../map/map'\nimport { ControlPanel } from '../controlPanel/cmp-controlPanel';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onClickCelsius = this.onClickCelsius.bind(this);\n    this.onClickFaringate = this.onClickFaringate.bind(this);\n    this.onChangeLang = this.onChangeLang.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onUpdateClick = this.onUpdateClick.bind(this);\n  }\n\n  onSearchChange = (event) => {\n    this.props.changeSearchString(event.target.value);\n  }\n\n  onChangeLang = (event) => {\n    this.props.changeLang(event.target.value);\n    localStorage.setItem('lang', event.target.value);\n  }\n\n  onClickCelsius() {\n    this.props.changeUseCelsius(true);\n    localStorage.setItem('isCelsius', true);\n  }\n\n  onClickFaringate() {\n    this.props.changeUseCelsius(false);\n    localStorage.setItem('isCelsius', false);\n  }\n\n  onClick() {\n    const { timesOfDay, season, weatherForBackground, searchString } = this.props;\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n    this.props.getWeatherByCity(searchString);\n    localStorage.setItem('searchString', searchString); \n  }\n\n  onUpdateClick() {\n    const { timesOfDay, season, weatherForBackground } = this.props;\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n  }\n\n  componentDidUpdate() {\n    document.body.style.backgroundImage = `url(\"${this.props.backgroundImage}\")`;\n  }\n\n  componentDidMount() {\n    const { timesOfDay, season, weatherForBackground, searchString } = this.props;\n\n    this.props.getBackgroundImage(`${timesOfDay}, ${season}, ${weatherForBackground}`);\n\n    if (this.props.searchString === '') {\n      navigator.geolocation.getCurrentPosition(\n        (pos => {this.props.getWeatherByCoord(pos.coords.latitude, pos.coords.longitude)}),\n        this.props.getWeatherByCoord,\n      );\n    } else {\n      this.props.getWeatherByCity(searchString);\n    }\n  }\n\n  render() {\n    const {\n      weather, forecast, lang, isCelsius, searchString,\n      isRequestWeather, isRequestForecast, isRequestBackgroundImage,\n     } = this.props;\n    if (isRequestWeather || isRequestForecast || isRequestBackgroundImage) {\n      return <div className=\"async-spinner\"></div>\n    }\n    if (!weather.city) {\n      return (\n        <div className=\"wrapper\">\n          <header className=\"header\">\n            <ControlPanel\n              value = { lang }\n              isCelsius = { isCelsius }\n              onClickUpdate = { this.onUpdateClick }\n              onClickFaringate = {this.onClickFaringate }\n              onClickCelsius = { this.onClickCelsius }\n              onChangeLang = { this.onChangeLang }\n            />\n            <Search \n              lang = { lang }\n              value = { searchString }\n              onChange = { this.onSearchChange }\n              onClick = { this.onClick }\n            />\n          </header>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <header className=\"header\">\n          <ControlPanel \n            value = { lang }\n            isCelsius = { isCelsius }\n            onClickUpdate = { this.onUpdateClick }\n            onClickFaringate = {this.onClickFaringate }\n            onClickCelsius = { this.onClickCelsius }\n            onChangeLang = { this.onChangeLang }\n          />\n          <Search\n            lang = { lang }\n            value = { searchString }\n            onChange = { this.onSearchChange }\n            onClick = { this.onClick }\n          />\n        </header>\n        <main className=\"main\">\n          <div className=\"weather\">\n            <WeatherDay\n              lang = { lang }\n              isCelsius = { isCelsius }\n              weather = { weather }\n            />\n            <div className=\"weather-forecast\">\n              {forecast && <WeatherForecastDay\n                lang = { lang }\n                isCelsius = { isCelsius }\n                forecast = { forecast[0] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang = { lang }\n                isCelsius = { isCelsius }\n                forecast = { forecast[1] }\n              />}\n              {forecast && <WeatherForecastDay \n                lang = { lang }\n                isCelsius = { isCelsius }\n                forecast = { forecast[2] }\n              />}\n            </div>\n          </div>\n          <Map\n            lang = { lang }\n            lat = { weather.city.coord.lat }\n            lon = { weather.city.coord.lon }\n          />\n        </main>\n    </div>\n    )\n  }\n}\n\nexport default Page;\n","import { addSero } from '../utils/service';\n\nexport const GET_WEATHER_FORECAST_REQUEST = 'GET_WEATHER_FORECAST_REQUEST';\nexport const GET_WEATHER_FORECAST_SUCCESS = 'GET_WEATHER_FORECAST_SUCCESS';\nexport const GET_WEATHER_FORECAST_FAILTURE = 'GET_WEATHER_FORECAST_FAILTURE';\n\nconst PATH_BASE = 'https://api.openweathermap.org/data/2.5/';\nconst FORECAST = 'forecast';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst ID = 'id=';\n\nexport const getWeatherForecastRequest = (bool) => ({\n  type: GET_WEATHER_FORECAST_REQUEST,\n  payload: bool,\n});\n\nexport const getWeatherForecastSuccess = (item) => ({\n  type: GET_WEATHER_FORECAST_SUCCESS,\n  payload: item,\n});\n\nexport const getWeatherForecastFailture = (bool) => ({\n  type: GET_WEATHER_FORECAST_FAILTURE,\n  payload: bool,\n});\n\nexport const getWeatherForecast = (city) => (dispatch) => {\n  dispatch(getWeatherForecastRequest(true));\n  fetch(`${PATH_BASE}${FORECAST}?${API_KEY}&${UNITS}&${ID}${city}`)\n    .then((response) => {\n      if (!response.ok) {\n        dispatch(getWeatherForecastRequest(false));\n        throw Error(response.statusText);\n      }\n      dispatch(getWeatherForecastRequest(false));\n      return response;\n    })\n    .then((response) => response.json())\n    .then((items) => {\n      dispatch(getWeatherForecastFailture(false));\n      // eslint-disable-next-line no-use-before-define\n      dispatch(getWeatherForecastSuccess(prepareForecast(items)));\n    })\n    .catch(() => dispatch(getWeatherForecastFailture(true)));\n};\n\nfunction prepareForecast(items) {\n  const result = [];\n  const countDaysOfForecast = 8;\n  for (let i = 0; i < 3; i += 1) {\n    const day = new Date();\n    day.setDate(day.getDate() + i + 1);\n    const dayToStr = `${day.getFullYear()}-${addSero(day.getMonth() + 1)}-${addSero(day.getDate())}`;\n    result[i] = {\n      weekDay: day.getDay(),\n      temp: Math.round(items.list.filter((item) => item.dt_txt.includes(dayToStr))\n        .reduce((sum, item) => sum + item.main.temp, 0) / countDaysOfForecast),\n      icon: items.list.filter((item) => item.dt_txt.includes(`${dayToStr} 12:00:00`))[0].weather[0].icon,\n    };\n  }\n  return result;\n}\n","/* eslint-disable no-use-before-define */\nexport const GET_BACKGROUND_REQUEST = 'GET_BACKGROUND_REQUEST';\nexport const GET_BACKGROUND_SUCCESS = 'GET_BACKGROUND_SUCCESS';\nexport const GET_BACKGROUND_FAILTURE = 'GET_BACKGROUND_FAILTURE';\nexport const GET_SEARCH_STRING_BACKGROUND = 'GET_SEARCH_STRING_BACKGROUND';\nexport const GET_WEATHER_FOR_BACKGROUND = 'GET_WEATHER_FOR_BACKGROUND';\n\nconst PATH_BASE = 'https://www.flickr.com/services/rest';\nconst METHOD = 'method=flickr.photos.search';\nconst FORMAT = 'format=json&nojsoncallback=1';\nconst PATH_SEARCH = 'text=';\nconst API_KEY = 'api_key=ad367f61799facf14dd49982b162f318';\n\nexport const getImageRequest = (bool) => ({\n  type: GET_BACKGROUND_REQUEST,\n  payload: bool,\n});\n\nexport const getImageSuccess = (item) => ({\n  type: GET_BACKGROUND_SUCCESS,\n  payload: item,\n});\n\nexport const getImageFailture = (bool) => ({\n  type: GET_BACKGROUND_FAILTURE,\n  payload: bool,\n});\n\nexport const getSearchStringBackground = (searchString) => ({\n  type: GET_SEARCH_STRING_BACKGROUND,\n  payload: searchString,\n});\n\nexport const getWeatherForBackground = (weather) => ({\n  type: GET_WEATHER_FOR_BACKGROUND,\n  payload: weather,\n});\n\nexport const getBackgroundImage = (searchString) => (dispatch) => {\n  dispatch(getImageRequest(true));\n  const search = `city, ${searchString}`;\n  fetch(`${PATH_BASE}?${API_KEY}&${METHOD}&${FORMAT}&${PATH_SEARCH}${search}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      dispatch(getImageRequest(false));\n      return response;\n    })\n    .then((response) => response.json())\n    .then((item) => {\n      const rndPhoto = Math.round(Math.random() * item.photos.photo.length);\n      dispatch(getImageFailture(false));\n      dispatch(getImageSuccess(prepareUrl(item.photos.photo[rndPhoto])));\n    })\n    .catch(() => dispatch(getImageFailture(true)));\n};\n\nfunction prepareUrl(item) {\n  return `https://farm${item.farm}.staticflickr.com/${item.server}/${item.id}_${item.secret}_b.jpg`;\n}\n","const countries = {\n  BD: 'Bangladesh',\n  BE: 'Belgium',\n  BF: 'Burkina Faso',\n  BG: 'Bulgaria',\n  BA: 'Bosnia and Herzegovina',\n  BB: 'Barbados',\n  WF: 'Wallis and Futuna',\n  BL: 'Saint Barthelemy',\n  BM: 'Bermuda',\n  BN: 'Brunei',\n  BO: 'Bolivia',\n  BH: 'Bahrain',\n  BI: 'Burundi',\n  BJ: 'Benin',\n  BT: 'Bhutan',\n  JM: 'Jamaica',\n  BV: 'Bouvet Island',\n  BW: 'Botswana',\n  WS: 'Samoa',\n  BQ: 'Bonaire, Saint Eustatius and Saba',\n  BR: 'Brazil',\n  BS: 'Bahamas',\n  JE: 'Jersey',\n  BY: 'Belarus',\n  BZ: 'Belize',\n  RU: 'Russia',\n  RW: 'Rwanda',\n  RS: 'Serbia',\n  TL: 'East Timor',\n  RE: 'Reunion',\n  TM: 'Turkmenistan',\n  TJ: 'Tajikistan',\n  RO: 'Romania',\n  TK: 'Tokelau',\n  GW: 'Guinea-Bissau',\n  GU: 'Guam',\n  GT: 'Guatemala',\n  GS: 'South Georgia and the South Sandwich Islands',\n  GR: 'Greece',\n  GQ: 'Equatorial Guinea',\n  GP: 'Guadeloupe',\n  JP: 'Japan',\n  GY: 'Guyana',\n  GG: 'Guernsey',\n  GF: 'French Guiana',\n  GE: 'Georgia',\n  GD: 'Grenada',\n  GB: 'United Kingdom',\n  GA: 'Gabon',\n  SV: 'El Salvador',\n  GN: 'Guinea',\n  GM: 'Gambia',\n  GL: 'Greenland',\n  GI: 'Gibraltar',\n  GH: 'Ghana',\n  OM: 'Oman',\n  TN: 'Tunisia',\n  JO: 'Jordan',\n  HR: 'Croatia',\n  HT: 'Haiti',\n  HU: 'Hungary',\n  HK: 'Hong Kong',\n  HN: 'Honduras',\n  HM: 'Heard Island and McDonald Islands',\n  VE: 'Venezuela',\n  PR: 'Puerto Rico',\n  PS: 'Palestinian Territory',\n  PW: 'Palau',\n  PT: 'Portugal',\n  SJ: 'Svalbard and Jan Mayen',\n  PY: 'Paraguay',\n  IQ: 'Iraq',\n  PA: 'Panama',\n  PK: 'Pakistan',\n  PH: 'Philippines',\n  PN: 'Pitcairn',\n  PL: 'Poland',\n  PM: 'Saint Pierre and Miquelon',\n  ZM: 'Zambia',\n  EH: 'Western Sahara',\n  EE: 'Estonia',\n  EG: 'Egypt',\n  ZA: 'South Africa',\n  EC: 'Ecuador',\n  IT: 'Italy',\n  VN: 'Vietnam',\n  SB: 'Solomon Islands',\n  ET: 'Ethiopia',\n  SO: 'Somalia',\n  ZW: 'Zimbabwe',\n  SA: 'Saudi Arabia',\n  ES: 'Spain',\n  ER: 'Eritrea',\n  ME: 'Montenegro',\n  MD: 'Moldova',\n  MG: 'Madagascar',\n  MF: 'Saint Martin',\n  MA: 'Morocco',\n  MC: 'Monaco',\n  UZ: 'Uzbekistan',\n  MM: 'Myanmar',\n  ML: 'Mali',\n  MO: 'Macao',\n  MN: 'Mongolia',\n  MH: 'Marshall Islands',\n  MK: 'Macedonia',\n  MU: 'Mauritius',\n  MT: 'Malta',\n  MW: 'Malawi',\n  MV: 'Maldives',\n  MQ: 'Martinique',\n  MP: 'Northern Mariana Islands',\n  MS: 'Montserrat',\n  MR: 'Mauritania',\n  IM: 'Isle of Man',\n  UG: 'Uganda',\n  TZ: 'Tanzania',\n  MY: 'Malaysia',\n  MX: 'Mexico',\n  IL: 'Israel',\n  FR: 'France',\n  IO: 'British Indian Ocean Territory',\n  SH: 'Saint Helena',\n  FI: 'Finland',\n  FJ: 'Fiji',\n  FK: 'Falkland Islands',\n  FM: 'Micronesia',\n  FO: 'Faroe Islands',\n  NI: 'Nicaragua',\n  NL: 'Netherlands',\n  NO: 'Norway',\n  NA: 'Namibia',\n  VU: 'Vanuatu',\n  NC: 'New Caledonia',\n  NE: 'Niger',\n  NF: 'Norfolk Island',\n  NG: 'Nigeria',\n  NZ: 'New Zealand',\n  NP: 'Nepal',\n  NR: 'Nauru',\n  NU: 'Niue',\n  CK: 'Cook Islands',\n  XK: 'Kosovo',\n  CI: 'Ivory Coast',\n  CH: 'Switzerland',\n  CO: 'Colombia',\n  CN: 'China',\n  CM: 'Cameroon',\n  CL: 'Chile',\n  CC: 'Cocos Islands',\n  CA: 'Canada',\n  CG: 'Republic of the Congo',\n  CF: 'Central African Republic',\n  CD: 'Democratic Republic of the Congo',\n  CZ: 'Czech Republic',\n  CY: 'Cyprus',\n  CX: 'Christmas Island',\n  CR: 'Costa Rica',\n  CW: 'Curacao',\n  CV: 'Cape Verde',\n  CU: 'Cuba',\n  SZ: 'Swaziland',\n  SY: 'Syria',\n  SX: 'Sint Maarten',\n  KG: 'Kyrgyzstan',\n  KE: 'Kenya',\n  SS: 'South Sudan',\n  SR: 'Suriname',\n  KI: 'Kiribati',\n  KH: 'Cambodia',\n  KN: 'Saint Kitts and Nevis',\n  KM: 'Comoros',\n  ST: 'Slovenia',\n  KP: 'North Korea',\n  KW: 'Kuwait',\n  SN: 'Senegal',\n  SM: 'San Marino',\n  SL: 'Sierra Leone',\n  SC: 'Seychelles',\n  KZ: 'Kazakhstan',\n  KY: 'Cayman Islands',\n  SG: 'Singapore',\n  SE: 'Sweden',\n  SD: 'Sudan',\n  DO: 'Dominican Republic',\n  DM: 'Dominica',\n  DJ: 'Djibouti',\n  DK: 'Denmark',\n  VG: 'British Virgin Islands',\n  DE: 'Germany',\n  YE: 'Yemen',\n  DZ: 'Algeria',\n  US: 'United States',\n  UY: 'Uruguay',\n  YT: 'Mayotte',\n  UM: 'United States Minor Outlying Islands',\n  LB: 'Lebanon',\n  LC: 'Saint Lucia',\n  LA: 'Laos',\n  TV: 'Tuvalu',\n  TW: 'Taiwan',\n  TT: 'Trinidad and Tobago',\n  TR: 'Turkey',\n  LK: 'Sri Lanka',\n  LI: 'Liechtenstein',\n  LV: 'Latvia',\n  TO: 'Tonga',\n  LT: 'Lithuania',\n  LU: 'Luxembourg',\n  LR: 'Liberia',\n  LS: 'Lesotho',\n  TH: 'Thailand',\n  TF: 'French Southern Territories',\n  TG: 'Togo',\n  TD: 'Chad',\n  TC: 'Turks and Caicos Islands',\n  LY: 'Libya',\n  VA: 'Vatican',\n  VC: 'Saint Vincent and the Grenadines',\n  AE: 'United Arab Emirates',\n  AD: 'Andorra',\n  AG: 'Antigua and Barbuda',\n  AF: 'Afghanistan',\n  AI: 'Anguilla',\n  VI: 'U.S. Virgin Islands',\n  IS: 'Iceland',\n  IR: 'Iran',\n  AM: 'Armenia',\n  AL: 'Albania',\n  AO: 'Angola',\n  AQ: 'Antarctica',\n  AS: 'American Samoa',\n  AR: 'Argentina',\n  AU: 'Australia',\n  AT: 'Austria',\n  AW: 'Aruba',\n  IN: 'India',\n  AX: 'Aland Islands',\n  AZ: 'Azerbaijan',\n  IE: 'Ireland',\n  ID: 'Indonesia',\n  UA: 'Ukraine',\n  QA: 'Qatar',\n  MZ: 'Mozambique',\n};\n\nexport default countries;\n","/* eslint-disable no-use-before-define */\nimport { getWeatherForecast } from './forecast';\nimport { getWeatherForBackground } from './backgroundImage';\nimport countries from '../utils/countries';\n\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILTURE = 'GET_WEATHER_FAILTURE';\n\nconst PATH_BASE = 'https://api.openweathermap.org/data/2.5/';\nconst WEATHER = 'weather';\nconst API_KEY = 'APPID=d5ecba2b149b9cdfb1fea656c735177d';\nconst UNITS = 'units=metric';\nconst PATH_SEARCH = 'q=';\n\nexport const getWeatherRequest = (bool) => ({\n  type: GET_WEATHER_REQUEST,\n  payload: bool,\n});\n\nexport const getWeatherSuccess = (item) => ({\n  type: GET_WEATHER_SUCCESS,\n  payload: item,\n});\n\nexport const getWeatherFailture = (bool) => ({\n  type: GET_WEATHER_FAILTURE,\n  payload: bool,\n});\n\nexport const getWeatherByCity = (city) => (dispatch) => {\n  dispatch(getWeatherRequest(true));\n\n  fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&${PATH_SEARCH}${city}`)\n    .then((response) => {\n      if (!response.ok) {\n        dispatch(getWeatherRequest(false));\n        throw Error(response.statusText);\n      }\n      dispatch(getWeatherRequest(false));\n      return response;\n    })\n    .then((response) => response.json())\n    .then((item) => {\n      dispatch(getWeatherForecast(item.id));\n      dispatch(getWeatherForBackground(item.weather[0].main));\n      dispatch(getWeatherFailture(false));\n      dispatch(getWeatherSuccess(preapreWeather(item)));\n    })\n\n    .catch(() => dispatch(getWeatherFailture(true)));\n};\n\nexport const getWeatherByCoord = (lat, lon) => async (dispatch) => {\n  dispatch(getWeatherRequest(true));\n\n  let coord = {\n    lat,\n    lon,\n  };\n\n  if (!lon) {\n    coord = await getCoordsByIP();\n  }\n\n  fetch(`${PATH_BASE}${WEATHER}?${API_KEY}&${UNITS}&lat=${coord.lat}&lon=${coord.lon}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      dispatch(getWeatherRequest(false));\n      return response;\n    })\n    .then((response) => response.json())\n    .then((item) => {\n      dispatch(getWeatherForecast(item.id));\n      dispatch(getWeatherForBackground(item.weather[0].main));\n      dispatch(getWeatherFailture(false));\n      dispatch(getWeatherSuccess(preapreWeather(item)));\n    })\n    .catch(() => dispatch(getWeatherFailture(true)));\n};\n\nfunction preapreWeather(item) {\n  const result = {\n    id: item.id,\n    date: item.dt,\n    timezone: item.timezone,\n    city: {\n      name: item.name,\n      country: countries[item.sys.country],\n      coord: {\n        lat: item.coord.lat,\n        lon: item.coord.lon,\n      },\n    },\n    weather: {\n      id: item.weather[0].id,\n      temp: Math.round(item.main.temp),\n      feels: Math.round(13.12 + 0.6215\n        * Math.round(item.main.temp) - 11.37 * (item.wind.speed ** 0.16) + 0.3965\n        * Math.round(item.main.temp) * (item.wind.speed ** 0.16)),\n      humidity: item.main.humidity,\n      icon: item.weather[0].icon,\n      wind: {\n        deg: item.wind.deg,\n        speed: item.wind.speed,\n      },\n    },\n  };\n  return result;\n}\n\nasync function getCoordsByIP() {\n  const PATH = 'https://ipinfo.io/';\n  const KEY = 'token=0f3c2185f8d434';\n  const response = await fetch(`${PATH}?${KEY}`);\n\n  if (!response.ok) {\n    throw new Error(`getCoordsByIP failed, HTTP status ${response.status}`);\n  }\n\n  const coords = await response.json();\n  const stringCoord = coords.loc;\n  const commaIndex = stringCoord.indexOf(',');\n\n  return {\n    lat: stringCoord.slice(0, commaIndex),\n    lon: stringCoord.slice(commaIndex + 1),\n  };\n}\n","import { connect } from 'react-redux';\nimport Page from './cmp-page';\nimport { getWeatherByCity, getWeatherByCoord } from '../../actions/weather';\nimport { getWeatherForecast } from '../../actions/forecast';\nimport { changeLang, changeUseCelsius, changeSearchString } from '../../actions/controlPanel';\nimport { getBackgroundImage } from '../../actions/backgroundImage';\n\nfunction mapStateToProps(state) {\n  const { weather, isRequestWeather, isErrorWeather } = state.weather;\n  const { forecast, isRequestForecast, isErrorForecast } = state.forecast;\n  const { lang, isCelsius, searchString } = state.controlPanel;\n  const {\n    backgroundImage, timesOfDay, season, weatherForBackground, isRequestBackgroundImage,\n  } = state.backgroundImage;\n  return {\n    isRequestWeather,\n    isRequestForecast,\n    isRequestBackgroundImage,\n    searchString,\n    weather,\n    isErrorWeather,\n    isErrorForecast,\n    forecast,\n    lang,\n    isCelsius,\n    backgroundImage,\n    timesOfDay,\n    season,\n    weatherForBackground,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWeatherByCity: (city) => dispatch(getWeatherByCity(city)),\n  getWeatherByCoord: (lat, lon) => dispatch(getWeatherByCoord(lat, lon)),\n  getWeatherForecast: (city) => dispatch(getWeatherForecast(city)),\n  changeLang: (lang) => dispatch(changeLang(lang)),\n  changeUseCelsius: (isCelsius) => dispatch(changeUseCelsius(isCelsius)),\n  changeSearchString: (searchString) => dispatch(changeSearchString(searchString)),\n  getBackgroundImage: (searchString) => dispatch(getBackgroundImage(searchString)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n","export const CHANGE_LANG = 'CHANGE_LANG';\nexport const CHANGE_USE_CELSIUS = 'USE_CELSIUS';\nexport const CHANGE_SEARCH_STRING = 'CHANGE_SEARCH_STRING';\n\nexport const changeLang = (lang) => ({\n  type: CHANGE_LANG,\n  payload: lang,\n});\n\nexport const changeUseCelsius = (isCelsius) => ({\n  type: CHANGE_USE_CELSIUS,\n  payload: isCelsius,\n});\n\nexport const changeSearchString = (searchString) => ({\n  type: CHANGE_SEARCH_STRING,\n  payload: searchString,\n});\n","import {\n  GET_WEATHER_REQUEST,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILTURE,\n} from '../actions/weather';\n\nconst initState = {\n  weather: '',\n  isRequestWeather: false,\n  isErrorWeather: false,\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_REQUEST: {\n      return {\n        ...state,\n        isRequestWeather: action.payload,\n      };\n    }\n    case GET_WEATHER_FAILTURE: {\n      return {\n        ...state,\n        isErrorWeather: action.payload,\n      };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...state,\n        weather: action.payload,\n      };\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  GET_WEATHER_FORECAST_REQUEST,\n  GET_WEATHER_FORECAST_SUCCESS,\n  GET_WEATHER_FORECAST_FAILTURE,\n} from '../actions/forecast';\n\nconst initState = {\n  forecast: '',\n  isRequestForecast: false,\n  isErrorForecast: false,\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_WEATHER_FORECAST_REQUEST: {\n      return {\n        ...state,\n        isRequestForecast: action.payload,\n      };\n    }\n    case GET_WEATHER_FORECAST_FAILTURE: {\n      return {\n        ...state,\n        isErrorForecast: action.payload,\n      };\n    }\n    case GET_WEATHER_FORECAST_SUCCESS: {\n      return {\n        ...state,\n        forecast: action.payload,\n      };\n    }\n    default:\n  }\n  return state;\n}\n","import {\n  CHANGE_LANG,\n  CHANGE_USE_CELSIUS,\n  CHANGE_SEARCH_STRING,\n} from '../actions/controlPanel';\n\nconst initState = {\n  lang: localStorage.getItem('lang') ? localStorage.getItem('lang') : 'en',\n  isCelsius: localStorage.getItem('isCelsius') ? localStorage.getItem('isCelsius') : 'true',\n  searchString: '',\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case CHANGE_LANG: {\n      return {\n        ...state,\n        lang: action.payload,\n      };\n    }\n    case CHANGE_USE_CELSIUS: {\n      return {\n        ...state,\n        isCelsius: action.payload,\n      };\n    }\n    case CHANGE_SEARCH_STRING: {\n      return {\n        ...state,\n        searchString: action.payload,\n      };\n    }\n    default:\n  }\n  return state;\n}\n","import { getCurrentSeason, getTimesOfDay } from '../utils/service';\nimport {\n  GET_BACKGROUND_REQUEST,\n  GET_BACKGROUND_SUCCESS,\n  GET_BACKGROUND_FAILTURE,\n  GET_WEATHER_FOR_BACKGROUND,\n} from '../actions/backgroundImage';\n\nconst initState = {\n  backgroundImage: '',\n  timesOfDay: getTimesOfDay(),\n  season: getCurrentSeason(),\n  weatherForBackground: '',\n  isRequestBackgroundImage: false,\n  isErrorBackgroundImage: false,\n};\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case GET_BACKGROUND_REQUEST: {\n      return {\n        ...state,\n        isRequestBackgroundImage: action.payload,\n      };\n    }\n    case GET_BACKGROUND_SUCCESS: {\n      return {\n        ...state,\n        backgroundImage: action.payload,\n      };\n    }\n    case GET_BACKGROUND_FAILTURE: {\n      return {\n        ...state,\n        isErrorBackgroundImage: action.payload,\n      };\n    }\n    case GET_WEATHER_FOR_BACKGROUND: {\n      return {\n        ...state,\n        weatherForBackground: action.payload,\n      };\n    }\n    default:\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport weather from './weather';\nimport forecast from './forecast';\nimport controlPanel from './controlPanel';\nimport backgroundImage from './backgroundImage';\n\nexport default combineReducers({\n  weather,\n  forecast,\n  controlPanel,\n  backgroundImage,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport Page from './ui/page/cnt-page';\nimport configureStore from './store/configureStore';\nimport './styles/main.scss';\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Page />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// https://github.com/stowball/dummys-guide-to-redux-and-thunk-react\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk),\n  );\n}\n"],"sourceRoot":""}